

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 06:55:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataCOMMON
   210  00C0                     __pidataCOMMON:
   211                           
   212                           ;initializer for _count
   213  00C0  3410               	retlw	16
   214                           
   215                           	psect	nvCOMMON
   216  0078                     __pnvCOMMON:
   217  0078                     _check:
   218  0078                     	ds	1
   219  0008                     _PORTD	set	8
   220  0014                     _SSPCON	set	20
   221  0014                     _SSPCONbits	set	20
   222  0006                     _PORTB	set	6
   223  0013                     _SSPBUF	set	19
   224  000C                     _PIR1bits	set	12
   225  0006                     _PORTBbits	set	6
   226  000B                     _INTCONbits	set	11
   227  0094                     _SSPSTATbits	set	148
   228  0094                     _SSPSTAT	set	148
   229  0087                     _TRISCbits	set	135
   230  0085                     _TRISAbits	set	133
   231  008C                     _PIE1bits	set	140
   232  0096                     _IOCBbits	set	150
   233  008F                     _OSCCON	set	143
   234  0086                     _TRISB	set	134
   235  0088                     _TRISD	set	136
   236  0189                     _ANSELH	set	393
   237  0188                     _ANSEL	set	392
   238                           
   239                           	psect	cinit
   240  000F                     start_initialization:	
   241                           ; #config settings
   242                           
   243  000F                     __initialization:
   244                           
   245                           ; Initialize objects allocated to COMMON
   246  000F  120A  118A  20C0  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   247  0014  00F9               	movwf	__pdataCOMMON& (0+127)
   248                           
   249                           ; Clear objects allocated to COMMON
   250  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   251  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   252  0017                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  0017                     __end_of__initialization:
   256  0017  0183               	clrf	3
   257  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0076                     __pbssCOMMON:
   261  0076                     _boton2:
   262  0076                     	ds	1
   263  0077                     _boton1:
   264  0077                     	ds	1
   265                           
   266                           	psect	dataCOMMON
   267  0079                     __pdataCOMMON:
   268  0079                     _count:
   269  0079                     	ds	1
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:
   273  0070                     ?_mandar_datos:
   274  0070                     ?_ISR:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ??_ISR:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_setup:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0070                     	ds	3
   289  0073                     ??_mandar_datos:
   290  0073                     ??_setup:	
   291                           ; 1 bytes @ 0x3
   292                           
   293                           
   294                           ; 1 bytes @ 0x3
   295  0073                     	ds	1
   296  0074                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x4
   299  0074                     	ds	2
   300                           
   301                           	psect	maintext
   302  001B                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 113 in file "C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, pclath, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : B00/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0
   324 ;;      Temps:          2       0       0       0       0
   325 ;;      Totals:         2       0       0       0       0
   326 ;;Total ram usage:        2 bytes
   327 ;; Hardware stack levels required when called:    2
   328 ;; This function calls:
   329 ;;		_mandar_datos
   330 ;;		_setup
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _main
   338  001B                     _main:
   339  001B                     l736:	
   340                           ;incstack = 0
   341                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   342                           
   343                           
   344                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 114:     setup();
   345  001B  120A  118A  2057  120A  118A  	fcall	_setup
   346  0020                     l738:
   347                           
   348                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 116:         if (boton1==1){
   349  0020  0377               	decf	_boton1,w
   350  0021  1D03               	btfss	3,2
   351  0022  2824               	goto	u61
   352  0023  2825               	goto	u60
   353  0024                     u61:
   354  0024  2830               	goto	l746
   355  0025                     u60:
   356  0025                     l740:
   357                           
   358                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 117:             if (PORTBbits.RB0==
      +                          0){
   359  0025  1283               	bcf	3,5	;RP0=0, select bank0
   360  0026  1303               	bcf	3,6	;RP1=0, select bank0
   361  0027  1806               	btfsc	6,0	;volatile
   362  0028  282A               	goto	u71
   363  0029  282B               	goto	u70
   364  002A                     u71:
   365  002A  2830               	goto	l746
   366  002B                     u70:
   367  002B                     l742:
   368                           
   369                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 118:                 count++;
   370  002B  3001               	movlw	1
   371  002C  00F4               	movwf	??_main
   372  002D  0874               	movf	??_main,w
   373  002E  07F9               	addwf	_count,f
   374  002F                     l744:
   375                           
   376                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 119:                 boton1 = 0;
   377  002F  01F7               	clrf	_boton1
   378  0030                     l746:
   379                           
   380                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 122:         if (boton2==1){
   381  0030  0376               	decf	_boton2,w
   382  0031  1D03               	btfss	3,2
   383  0032  2834               	goto	u81
   384  0033  2835               	goto	u80
   385  0034                     u81:
   386  0034  2841               	goto	l754
   387  0035                     u80:
   388  0035                     l748:
   389                           
   390                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 123:             if (PORTBbits.RB2==
      +                          0){
   391  0035  1283               	bcf	3,5	;RP0=0, select bank0
   392  0036  1303               	bcf	3,6	;RP1=0, select bank0
   393  0037  1906               	btfsc	6,2	;volatile
   394  0038  283A               	goto	u91
   395  0039  283B               	goto	u90
   396  003A                     u91:
   397  003A  2841               	goto	l754
   398  003B                     u90:
   399  003B                     l750:
   400                           
   401                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 124:                 count = count -
      +                          1;
   402  003B  0879               	movf	_count,w
   403  003C  3EFF               	addlw	255
   404  003D  00F4               	movwf	??_main
   405  003E  0874               	movf	??_main,w
   406  003F  00F9               	movwf	_count
   407  0040                     l752:
   408                           
   409                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 125:                 boton2 = 0;
   410  0040  01F6               	clrf	_boton2
   411  0041                     l754:
   412                           
   413                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 129:         PORTD = count;
   414  0041  0879               	movf	_count,w
   415  0042  1283               	bcf	3,5	;RP0=0, select bank0
   416  0043  1303               	bcf	3,6	;RP1=0, select bank0
   417  0044  0088               	movwf	8	;volatile
   418  0045                     l756:
   419                           
   420                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 130:         mandar_datos();
   421  0045  120A  118A  20B5  120A  118A  	fcall	_mandar_datos
   422  004A                     l758:
   423                           
   424                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 131:         _delay((unsigned long)(
      +                          (1)*(8000000/4000.0)));
   425  004A  3003               	movlw	3
   426  004B  00F5               	movwf	??_main+1
   427  004C  3097               	movlw	151
   428  004D  00F4               	movwf	??_main
   429  004E                     u107:
   430  004E  0BF4               	decfsz	??_main,f
   431  004F  284E               	goto	u107
   432  0050  0BF5               	decfsz	??_main+1,f
   433  0051  284E               	goto	u107
   434  0052  2853               	nop2
   435  0053  2820               	goto	l738
   436  0054  120A  118A  280C   	ljmp	start
   437  0057                     __end_of_main:
   438                           
   439                           	psect	text1
   440  0057                     __ptext1:	
   441 ;; *************** function _setup *****************
   442 ;; Defined at:
   443 ;;		line 67 in file "C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          1       0       0       0       0
   460 ;;      Totals:         1       0       0       0       0
   461 ;;Total ram usage:        1 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; Hardware stack levels required when called:    1
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _setup
   473  0057                     _setup:
   474  0057                     l670:	
   475                           ;incstack = 0
   476                           ; Regs used in _setup: [wreg+status,2]
   477                           
   478                           
   479                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 69:     TRISD = 0;
   480  0057  1683               	bsf	3,5	;RP0=1, select bank1
   481  0058  1303               	bcf	3,6	;RP1=0, select bank1
   482  0059  0188               	clrf	8	;volatile
   483                           
   484                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 70:     ANSEL = 0;
   485  005A  1683               	bsf	3,5	;RP0=1, select bank3
   486  005B  1703               	bsf	3,6	;RP1=1, select bank3
   487  005C  0188               	clrf	8	;volatile
   488                           
   489                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 71:     ANSELH = 0;
   490  005D  0189               	clrf	9	;volatile
   491  005E                     l672:
   492                           
   493                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 72:     TRISB = 0b00001111;
   494  005E  300F               	movlw	15
   495  005F  1683               	bsf	3,5	;RP0=1, select bank1
   496  0060  1303               	bcf	3,6	;RP1=0, select bank1
   497  0061  0086               	movwf	6	;volatile
   498  0062                     l674:
   499                           
   500                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 73:     PORTB = 0;
   501  0062  1283               	bcf	3,5	;RP0=0, select bank0
   502  0063  1303               	bcf	3,6	;RP1=0, select bank0
   503  0064  0186               	clrf	6	;volatile
   504                           
   505                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 76:     OSCCON = 0b01110101;
   506  0065  3075               	movlw	117
   507  0066  1683               	bsf	3,5	;RP0=1, select bank1
   508  0067  1303               	bcf	3,6	;RP1=0, select bank1
   509  0068  008F               	movwf	15	;volatile
   510  0069                     l676:
   511                           
   512                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 79:     (INTCONbits.GIE = 1);
   513  0069  178B               	bsf	11,7	;volatile
   514  006A                     l678:
   515                           
   516                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 80:     INTCONbits.PEIE = 1;
   517  006A  170B               	bsf	11,6	;volatile
   518  006B                     l680:
   519                           
   520                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 81:     INTCONbits.RBIE = 1;
   521  006B  158B               	bsf	11,3	;volatile
   522  006C                     l682:
   523                           
   524                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 82:     IOCBbits.IOCB0 = 1;
   525  006C  1416               	bsf	22,0	;volatile
   526  006D                     l684:
   527                           
   528                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 83:     IOCBbits.IOCB2 = 1;
   529  006D  1516               	bsf	22,2	;volatile
   530  006E                     l686:
   531                           
   532                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 84:     INTCONbits.RBIF = 0;
   533  006E  100B               	bcf	11,0	;volatile
   534  006F                     l688:
   535                           
   536                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 86:     PIE1bits.SSPIE = 1;
   537  006F  158C               	bsf	12,3	;volatile
   538  0070                     l690:
   539                           
   540                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 87:     PIR1bits.SSPIF = 0;
   541  0070  1283               	bcf	3,5	;RP0=0, select bank0
   542  0071  1303               	bcf	3,6	;RP1=0, select bank0
   543  0072  118C               	bcf	12,3	;volatile
   544  0073                     l692:
   545                           
   546                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 90:     SSPCONbits.SSPEN = 1;
   547  0073  1694               	bsf	20,5	;volatile
   548  0074                     l694:
   549                           
   550                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 92:     TRISAbits.TRISA5 = 1;
   551  0074  1683               	bsf	3,5	;RP0=1, select bank1
   552  0075  1303               	bcf	3,6	;RP1=0, select bank1
   553  0076  1685               	bsf	5,5	;volatile
   554  0077                     l696:
   555                           
   556                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 94:     TRISCbits.TRISC3 = 1;
   557  0077  1587               	bsf	7,3	;volatile
   558  0078                     l698:
   559                           
   560                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 95:     TRISCbits.TRISC5 = 0;
   561  0078  1287               	bcf	7,5	;volatile
   562  0079                     l700:
   563                           
   564                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 96:     TRISCbits.TRISC4 = 1;
   565  0079  1607               	bsf	7,4	;volatile
   566                           
   567                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 97:     SSPCON = 0b00100100;
   568  007A  3024               	movlw	36
   569  007B  1283               	bcf	3,5	;RP0=0, select bank0
   570  007C  1303               	bcf	3,6	;RP1=0, select bank0
   571  007D  0094               	movwf	20	;volatile
   572  007E                     l702:
   573                           
   574                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 99:     TRISCbits.TRISC3 = 1;
   575  007E  1683               	bsf	3,5	;RP0=1, select bank1
   576  007F  1303               	bcf	3,6	;RP1=0, select bank1
   577  0080  1587               	bsf	7,3	;volatile
   578  0081                     l704:
   579                           
   580                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 100:     TRISCbits.TRISC5 = 0;
   581  0081  1287               	bcf	7,5	;volatile
   582                           
   583                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 103:     SSPSTAT = 0b01000000;
   584  0082  3040               	movlw	64
   585  0083  0094               	movwf	20	;volatile
   586  0084                     l706:
   587                           
   588                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 104:     PORTB = 0;
   589  0084  1283               	bcf	3,5	;RP0=0, select bank0
   590  0085  1303               	bcf	3,6	;RP1=0, select bank0
   591  0086  0186               	clrf	6	;volatile
   592  0087                     l708:
   593                           
   594                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 105:     check = SSPBUF;
   595  0087  0813               	movf	19,w	;volatile
   596  0088  00F3               	movwf	??_setup
   597  0089  0873               	movf	??_setup,w
   598  008A  00F8               	movwf	_check
   599  008B                     l710:
   600                           
   601                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 106:     SSPCONbits.WCOL = 0;
   602  008B  1394               	bcf	20,7	;volatile
   603  008C                     l712:
   604                           
   605                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 107:     SSPCONbits.SSPOV = 0;
   606  008C  1314               	bcf	20,6	;volatile
   607  008D                     l714:
   608                           
   609                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 108:     SSPCON = 0b00100100;
   610  008D  3024               	movlw	36
   611  008E  0094               	movwf	20	;volatile
   612  008F                     l62:
   613  008F  0008               	return
   614  0090                     __end_of_setup:
   615                           
   616                           	psect	text2
   617  00B5                     __ptext2:	
   618 ;; *************** function _mandar_datos *****************
   619 ;; Defined at:
   620 ;;		line 136 in file "C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _mandar_datos
   650  00B5                     _mandar_datos:
   651  00B5                     l718:	
   652                           ;incstack = 0
   653                           ; Regs used in _mandar_datos: [wreg]
   654                           
   655                           
   656                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 139:     if (SSPSTATbits.BF==0){
   657  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   658  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   659  00B7  1814               	btfsc	20,0	;volatile
   660  00B8  28BA               	goto	u11
   661  00B9  28BB               	goto	u10
   662  00BA                     u11:
   663  00BA  28BF               	goto	l78
   664  00BB                     u10:
   665  00BB                     l720:
   666                           
   667                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 140:         SSPBUF = count;
   668  00BB  0879               	movf	_count,w
   669  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   670  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   671  00BE  0093               	movwf	19	;volatile
   672  00BF                     l78:
   673  00BF  0008               	return
   674  00C0                     __end_of_mandar_datos:
   675                           
   676                           	psect	text3
   677  0090                     __ptext3:	
   678 ;; *************** function _ISR *****************
   679 ;; Defined at:
   680 ;;		line 46 in file "C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          3       0       0       0       0
   697 ;;      Totals:         3       0       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		Interrupt level 1
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _ISR
   709  0090                     _ISR:
   710  0090                     i1l724:
   711                           
   712                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 48:     if (INTCONbits.RBIF==1){
   713  0090  1C0B               	btfss	11,0	;volatile
   714  0091  2893               	goto	u2_21
   715  0092  2894               	goto	u2_20
   716  0093                     u2_21:
   717  0093  28A3               	goto	i1l55
   718  0094                     u2_20:
   719  0094                     i1l726:
   720                           
   721                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 49:         INTCONbits.RBIF = 0;
   722  0094  100B               	bcf	11,0	;volatile
   723                           
   724                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 50:         if(PORTBbits.RB0==1){
   725  0095  1283               	bcf	3,5	;RP0=0, select bank0
   726  0096  1303               	bcf	3,6	;RP1=0, select bank0
   727  0097  1C06               	btfss	6,0	;volatile
   728  0098  289A               	goto	u3_21
   729  0099  289B               	goto	u3_20
   730  009A                     u3_21:
   731  009A  289D               	goto	i1l56
   732  009B                     u3_20:
   733  009B                     i1l728:
   734                           
   735                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 51:             boton1 = 1;
   736  009B  01F7               	clrf	_boton1
   737  009C  0AF7               	incf	_boton1,f
   738  009D                     i1l56:	
   739                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 52:         }
   740                           
   741                           
   742                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 53:         if (PORTBbits.RB2==1){
   743  009D  1D06               	btfss	6,2	;volatile
   744  009E  28A0               	goto	u4_21
   745  009F  28A1               	goto	u4_20
   746  00A0                     u4_21:
   747  00A0  28A3               	goto	i1l55
   748  00A1                     u4_20:
   749  00A1                     i1l730:
   750                           
   751                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 54:             boton2 = 1;
   752  00A1  01F6               	clrf	_boton2
   753  00A2  0AF6               	incf	_boton2,f
   754  00A3                     i1l55:	
   755                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 57:     }
   756                           
   757                           
   758                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 58:     if (PIR1bits.SSPIF ==1){
   759  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   760  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   761  00A5  1D8C               	btfss	12,3	;volatile
   762  00A6  28A8               	goto	u5_21
   763  00A7  28A9               	goto	u5_20
   764  00A8                     u5_21:
   765  00A8  28AE               	goto	i1l59
   766  00A9                     u5_20:
   767  00A9                     i1l732:
   768                           
   769                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 59:         PIR1bits.SSPIF = 0;
   770  00A9  118C               	bcf	12,3	;volatile
   771  00AA                     i1l734:
   772                           
   773                           ;C:/Users/cabal/MPLABXProjects/pUSH_SLAVE.X/main.c: 60:         check = SSPBUF;
   774  00AA  0813               	movf	19,w	;volatile
   775  00AB  00F0               	movwf	??_ISR
   776  00AC  0870               	movf	??_ISR,w
   777  00AD  00F8               	movwf	_check
   778  00AE                     i1l59:
   779  00AE  0872               	movf	??_ISR+2,w
   780  00AF  008A               	movwf	10
   781  00B0  0E71               	swapf	??_ISR+1,w
   782  00B1  0083               	movwf	3
   783  00B2  0EFE               	swapf	btemp,f
   784  00B3  0E7E               	swapf	btemp,w
   785  00B4  0009               	retfie
   786  00B5                     __end_of_ISR:
   787  007E                     btemp	set	126	;btemp
   788  007E                     wtemp0	set	126
   789                           
   790                           	psect	intentry
   791  0004                     __pintentry:	
   792                           ;incstack = 0
   793                           ; Regs used in _ISR: [wreg]
   794                           
   795  0004                     interrupt_function:
   796  007E                     saved_w	set	btemp
   797  0004  00FE               	movwf	btemp
   798  0005  0E03               	swapf	3,w
   799  0006  00F1               	movwf	??_ISR+1
   800  0007  080A               	movf	10,w
   801  0008  00F2               	movwf	??_ISR+2
   802  0009  120A  118A  2890   	ljmp	_ISR
   803                           
   804                           	psect	config
   805                           
   806                           ;Config register CONFIG1 @ 0x2007
   807                           ;	Oscillator Selection bits
   808                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   809                           ;	Watchdog Timer Enable bit
   810                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   811                           ;	Power-up Timer Enable bit
   812                           ;	PWRTE = OFF, PWRT disabled
   813                           ;	RE3/MCLR pin function select bit
   814                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   815                           ;	Code Protection bit
   816                           ;	CP = OFF, Program memory code protection is disabled
   817                           ;	Data Code Protection bit
   818                           ;	CPD = OFF, Data memory code protection is disabled
   819                           ;	Brown Out Reset Selection bits
   820                           ;	BOREN = OFF, BOR disabled
   821                           ;	Internal External Switchover bit
   822                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   823                           ;	Fail-Safe Clock Monitor Enabled bit
   824                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   825                           ;	Low Voltage Programming Enable bit
   826                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   827                           ;	In-Circuit Debugger Mode bit
   828                           ;	DEBUG = 0x1, unprogrammed default
   829  2007                     	org	8199
   830  2007  20D4               	dw	8404
   831                           
   832                           ;Config register CONFIG2 @ 0x2008
   833                           ;	Brown-out Reset Selection bit
   834                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   835                           ;	Flash Program Memory Self Write Enable bits
   836                           ;	WRT = OFF, Write protection off
   837  2008                     	org	8200
   838  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                       _mandar_datos
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mandar_datos                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mandar_datos
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 06:55:03 2021

            _SSPSTATbits 0094                       l62 008F                       l78 00BF  
                     u10 00BB                       u11 00BA                       u60 0025  
                     u61 0024                       u70 002B                       u71 002A  
                     u80 0035                       u81 0034                       u90 003B  
                     u91 003A                      l700 0079                      l710 008B  
                    l702 007E                      l720 00BB                      l712 008C  
                    l704 0081                      l714 008D                      l706 0084  
                    l708 0087                      l740 0025                      l718 00B5  
                    l670 0057                      l750 003B                      l742 002B  
                    l680 006B                      l672 005E                      l752 0040  
                    l744 002F                      l736 001B                      l690 0070  
                    l682 006C                      l674 0062                      l754 0041  
                    l746 0030                      l738 0020                      l692 0073  
                    l684 006D                      l676 0069                      l756 0045  
                    l748 0035                      l694 0074                      l686 006E  
                    l678 006A                      l758 004A                      l696 0077  
                    l688 006F                      l698 0078                      u107 004E  
                    _ISR 0090                     ?_ISR 0070                     i1l55 00A3  
                   i1l56 009D                     i1l59 00AE                     u2_20 0094  
                   u2_21 0093                     u3_20 009B                     u3_21 009A  
                   u4_20 00A1                     u4_21 00A0                     u5_20 00A9  
                   u5_21 00A8                     _main 001B                     btemp 007E  
                   start 000C                    ??_ISR 0070            ?_mandar_datos 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l730 00A1  
                  i1l732 00A9                    i1l724 0090                    i1l734 00AA  
                  i1l726 0094                    i1l728 009B                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _check 0078                    _count 0079                    _setup 0057  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0057           ??_mandar_datos 0073  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 _OSCCON 008F                   _SSPBUF 0013                   _SSPCON 0014  
                 _boton1 0077                   _boton2 0076             __pdataCOMMON 0079  
                 saved_w 007E  __end_of__initialization 0017           __pcstackCOMMON 0070  
          __end_of_setup 0090                  ??_setup 0073     __end_of_mandar_datos 00C0  
             __pnvCOMMON 0078               __pmaintext 001B               __pintentry 0004  
                _SSPSTAT 0094                  __ptext1 0057                  __ptext2 00B5  
                __ptext3 0090             __size_of_ISR 0025     end_of_initialization 0017  
              _PORTBbits 0006                _TRISAbits 0085                _TRISCbits 0087  
  __size_of_mandar_datos 000B            __pidataCOMMON 00C0             _mandar_datos 00B5  
    start_initialization 000F              __end_of_ISR 00B5              __pbssCOMMON 0076  
              ___latbits 0002           __size_of_setup 0039        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
          __size_of_main 003C               _INTCONbits 000B                 intlevel1 0000  
             _SSPCONbits 0014  
