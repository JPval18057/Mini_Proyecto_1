

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 21:11:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285                           
   286                           	psect	nvCOMMON
   287  0078                     __pnvCOMMON:
   288  0078                     _check:
   289  0078                     	ds	1
   290  001F                     _ADCON0bits	set	31
   291  0006                     _PORTBbits	set	6
   292  0008                     _PORTD	set	8
   293  0006                     _PORTB	set	6
   294  0014                     _SSPCON	set	20
   295  0014                     _SSPCONbits	set	20
   296  000B                     _INTCONbits	set	11
   297  001F                     _ADCON0	set	31
   298  0013                     _SSPBUF	set	19
   299  001E                     _ADRESH	set	30
   300  000C                     _PIR1bits	set	12
   301  0094                     _SSPSTATbits	set	148
   302  0094                     _SSPSTAT	set	148
   303  0085                     _TRISAbits	set	133
   304  008C                     _PIE1bits	set	140
   305  008F                     _OSCCON	set	143
   306  009F                     _ADCON1	set	159
   307  0086                     _TRISB	set	134
   308  0088                     _TRISD	set	136
   309  0087                     _TRISCbits	set	135
   310  0085                     _TRISA	set	133
   311  043B                     _TRISC3	set	1083
   312  043D                     _TRISC5	set	1085
   313  0189                     _ANSELH	set	393
   314  0188                     _ANSEL	set	392
   315                           
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318                           ; #config settings
   319                           
   320  000F                     __initialization:
   321                           
   322                           ; Clear objects allocated to COMMON
   323  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   324  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   325  0011                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  0011                     __end_of__initialization:
   329  0011  0183               	clrf	3
   330  0012  120A  118A  2852   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMMON
   333  0076                     __pbssCOMMON:
   334  0076                     _pot_temp:
   335  0076                     	ds	1
   336  0077                     _pot:
   337  0077                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_leer_datos:
   342  0070                     ?_mandar_datos:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_ISR:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ??_ISR:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_setup:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357                           
   358                           ; 1 bytes @ 0x0
   359  0070                     	ds	3
   360  0073                     ??_leer_datos:
   361  0073                     ??_mandar_datos:	
   362                           ; 1 bytes @ 0x3
   363                           
   364  0073                     ??_setup:	
   365                           ; 1 bytes @ 0x3
   366                           
   367                           
   368                           ; 1 bytes @ 0x3
   369  0073                     	ds	1
   370  0074                     ??_main:
   371                           
   372                           ; 1 bytes @ 0x4
   373  0074                     	ds	2
   374                           
   375                           	psect	maintext
   376  0052                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 115 in file "C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          2       0       0       0       0
   399 ;;      Totals:         2       0       0       0       0
   400 ;;Total ram usage:        2 bytes
   401 ;; Hardware stack levels required when called:    2
   402 ;; This function calls:
   403 ;;		_leer_datos
   404 ;;		_mandar_datos
   405 ;;		_setup
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _main
   413  0052                     _main:
   414  0052                     l783:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 116:     setup();
   420  0052  120A  118A  2015  120A  118A  	fcall	_setup
   421  0057                     l785:
   422                           
   423                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 118:         leer_datos();
   424  0057  120A  118A  207F  120A  118A  	fcall	_leer_datos
   425                           
   426                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 120:         PORTD = pot_temp;
   427  005C  0876               	movf	_pot_temp,w
   428  005D  1283               	bcf	3,5	;RP0=0, select bank0
   429  005E  1303               	bcf	3,6	;RP1=0, select bank0
   430  005F  0088               	movwf	8	;volatile
   431  0060                     l787:
   432                           
   433                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 121:         mandar_datos();
   434  0060  120A  118A  20C4  120A  118A  	fcall	_mandar_datos
   435  0065                     l789:
   436                           
   437                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 123:         if (SSPSTATbits.BF==1){
   438  0065  1683               	bsf	3,5	;RP0=1, select bank1
   439  0066  1303               	bcf	3,6	;RP1=0, select bank1
   440  0067  1C14               	btfss	20,0	;volatile
   441  0068  286A               	goto	u51
   442  0069  286B               	goto	u50
   443  006A                     u51:
   444  006A  286F               	goto	l74
   445  006B                     u50:
   446  006B                     l791:
   447                           
   448                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 124:             PORTBbits.RB0 = 1;
   449  006B  1283               	bcf	3,5	;RP0=0, select bank0
   450  006C  1303               	bcf	3,6	;RP1=0, select bank0
   451  006D  1406               	bsf	6,0	;volatile
   452                           
   453                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 125:         } else {
   454  006E  2872               	goto	l793
   455  006F                     l74:
   456                           
   457                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 126:             PORTBbits.RB0 = 0;
   458  006F  1283               	bcf	3,5	;RP0=0, select bank0
   459  0070  1303               	bcf	3,6	;RP1=0, select bank0
   460  0071  1006               	bcf	6,0	;volatile
   461  0072                     l793:
   462                           
   463                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 130:         _delay((unsigned long)((
      +                          1)*(8000000/4000.0)));
   464  0072  3003               	movlw	3
   465  0073  00F5               	movwf	??_main+1
   466  0074  3097               	movlw	151
   467  0075  00F4               	movwf	??_main
   468  0076                     u77:
   469  0076  0BF4               	decfsz	??_main,f
   470  0077  2876               	goto	u77
   471  0078  0BF5               	decfsz	??_main+1,f
   472  0079  2876               	goto	u77
   473  007A  287B               	nop2
   474  007B  2857               	goto	l785
   475  007C  120A  118A  280C   	ljmp	start
   476  007F                     __end_of_main:
   477                           
   478                           	psect	text1
   479  0015                     __ptext1:	
   480 ;; *************** function _setup *****************
   481 ;; Defined at:
   482 ;;		line 65 in file "C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          1       0       0       0       0
   499 ;;      Totals:         1       0       0       0       0
   500 ;;Total ram usage:        1 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _setup
   512  0015                     _setup:
   513  0015                     l711:	
   514                           ;incstack = 0
   515                           ; Regs used in _setup: [wreg+status,2]
   516                           
   517                           
   518                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 67:     TRISA = 0b00100101;
   519  0015  3025               	movlw	37
   520  0016  1683               	bsf	3,5	;RP0=1, select bank1
   521  0017  1303               	bcf	3,6	;RP1=0, select bank1
   522  0018  0085               	movwf	5	;volatile
   523                           
   524                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 68:     ANSEL = 0b00000101;
   525  0019  3005               	movlw	5
   526  001A  1683               	bsf	3,5	;RP0=1, select bank3
   527  001B  1703               	bsf	3,6	;RP1=1, select bank3
   528  001C  0088               	movwf	8	;volatile
   529  001D                     l713:
   530                           
   531                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 69:     ANSELH = 0;
   532  001D  0189               	clrf	9	;volatile
   533  001E                     l715:
   534                           
   535                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 70:     TRISCbits.TRISC3 = 1;
   536  001E  1683               	bsf	3,5	;RP0=1, select bank1
   537  001F  1303               	bcf	3,6	;RP1=0, select bank1
   538  0020  1587               	bsf	7,3	;volatile
   539  0021                     l717:
   540                           
   541                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 71:     TRISCbits.TRISC5 = 0;
   542  0021  1287               	bcf	7,5	;volatile
   543  0022                     l719:
   544                           
   545                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 72:     TRISD = 0;
   546  0022  0188               	clrf	8	;volatile
   547  0023                     l721:
   548                           
   549                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 73:     TRISB = 0;
   550  0023  0186               	clrf	6	;volatile
   551  0024                     l723:
   552                           
   553                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 76:     ADCON0 = 0b10000001;
   554  0024  3081               	movlw	129
   555  0025  1283               	bcf	3,5	;RP0=0, select bank0
   556  0026  1303               	bcf	3,6	;RP1=0, select bank0
   557  0027  009F               	movwf	31	;volatile
   558                           
   559                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 78:     ADCON1 = 0b00000000;
   560  0028  1683               	bsf	3,5	;RP0=1, select bank1
   561  0029  1303               	bcf	3,6	;RP1=0, select bank1
   562  002A  019F               	clrf	31	;volatile
   563  002B                     l725:
   564                           
   565                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 83:     OSCCON = 0b01110101;
   566  002B  3075               	movlw	117
   567  002C  008F               	movwf	15	;volatile
   568  002D                     l727:
   569                           
   570                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 86:     INTCONbits.GIE = 1;
   571  002D  178B               	bsf	11,7	;volatile
   572  002E                     l729:
   573                           
   574                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 87:     INTCONbits.PEIE = 1;
   575  002E  170B               	bsf	11,6	;volatile
   576  002F                     l731:
   577                           
   578                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 88:     PIE1bits.ADIE = 1;
   579  002F  170C               	bsf	12,6	;volatile
   580  0030                     l733:
   581                           
   582                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 89:     PIR1bits.ADIF = 0;
   583  0030  1283               	bcf	3,5	;RP0=0, select bank0
   584  0031  1303               	bcf	3,6	;RP1=0, select bank0
   585  0032  130C               	bcf	12,6	;volatile
   586  0033                     l735:
   587                           
   588                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 91:     PIE1bits.SSPIE = 1;
   589  0033  1683               	bsf	3,5	;RP0=1, select bank1
   590  0034  1303               	bcf	3,6	;RP1=0, select bank1
   591  0035  158C               	bsf	12,3	;volatile
   592  0036                     l737:
   593                           
   594                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 92:     PIR1bits.SSPIF = 0;
   595  0036  1283               	bcf	3,5	;RP0=0, select bank0
   596  0037  1303               	bcf	3,6	;RP1=0, select bank0
   597  0038  118C               	bcf	12,3	;volatile
   598  0039                     l739:
   599                           
   600                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 95:     SSPCONbits.SSPEN = 1;
   601  0039  1694               	bsf	20,5	;volatile
   602  003A                     l741:
   603                           
   604                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 97:     TRISAbits.TRISA5 = 1;
   605  003A  1683               	bsf	3,5	;RP0=1, select bank1
   606  003B  1303               	bcf	3,6	;RP1=0, select bank1
   607  003C  1685               	bsf	5,5	;volatile
   608  003D                     l743:
   609                           
   610                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 99:     TRISCbits.TRISC3 = 1;
   611  003D  1587               	bsf	7,3	;volatile
   612  003E                     l745:
   613                           
   614                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 100:     TRISCbits.TRISC5 = 0;
   615  003E  1287               	bcf	7,5	;volatile
   616  003F                     l747:
   617                           
   618                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 101:     TRISCbits.TRISC4 = 1;
   619  003F  1607               	bsf	7,4	;volatile
   620  0040                     l749:
   621                           
   622                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 102:     SSPCON = 0b00100100;
   623  0040  3024               	movlw	36
   624  0041  1283               	bcf	3,5	;RP0=0, select bank0
   625  0042  1303               	bcf	3,6	;RP1=0, select bank0
   626  0043  0094               	movwf	20	;volatile
   627  0044                     l751:
   628                           
   629                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 107:     SSPSTAT = 0b01000000;
   630  0044  3040               	movlw	64
   631  0045  1683               	bsf	3,5	;RP0=1, select bank1
   632  0046  1303               	bcf	3,6	;RP1=0, select bank1
   633  0047  0094               	movwf	20	;volatile
   634  0048                     l753:
   635                           
   636                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 108:     PORTB = 0;
   637  0048  1283               	bcf	3,5	;RP0=0, select bank0
   638  0049  1303               	bcf	3,6	;RP1=0, select bank0
   639  004A  0186               	clrf	6	;volatile
   640                           
   641                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 109:     check = SSPBUF;
   642  004B  0813               	movf	19,w	;volatile
   643  004C  00F3               	movwf	??_setup
   644  004D  0873               	movf	??_setup,w
   645  004E  00F8               	movwf	_check
   646  004F                     l755:
   647                           
   648                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 110:     SSPCONbits.WCOL = 0;
   649  004F  1394               	bcf	20,7	;volatile
   650  0050                     l757:
   651                           
   652                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 111:     SSPCONbits.SSPOV = 0;
   653  0050  1314               	bcf	20,6	;volatile
   654  0051                     l68:
   655  0051  0008               	return
   656  0052                     __end_of_setup:
   657                           
   658                           	psect	text2
   659  00C4                     __ptext2:	
   660 ;; *************** function _mandar_datos *****************
   661 ;; Defined at:
   662 ;;		line 172 in file "C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _mandar_datos
   692  00C4                     _mandar_datos:
   693  00C4                     l765:	
   694                           ;incstack = 0
   695                           ; Regs used in _mandar_datos: [wreg]
   696                           
   697                           
   698                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 175:     SSPBUF = pot;
   699  00C4  0877               	movf	_pot,w
   700  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   701  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   702  00C7  0093               	movwf	19	;volatile
   703  00C8                     l85:
   704  00C8  0008               	return
   705  00C9                     __end_of_mandar_datos:
   706                           
   707                           	psect	text3
   708  007F                     __ptext3:	
   709 ;; *************** function _leer_datos *****************
   710 ;; Defined at:
   711 ;;		line 135 in file "C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		None
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _leer_datos
   741  007F                     _leer_datos:
   742  007F                     l761:	
   743                           ;incstack = 0
   744                           ; Regs used in _leer_datos: []
   745                           
   746                           
   747                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 136:     if (ADCON0bits.GO_DONE==0){
   748  007F  1283               	bcf	3,5	;RP0=0, select bank0
   749  0080  1303               	bcf	3,6	;RP1=0, select bank0
   750  0081  189F               	btfsc	31,1	;volatile
   751  0082  2884               	goto	u11
   752  0083  2885               	goto	u10
   753  0084                     u11:
   754  0084  28A4               	goto	l82
   755  0085                     u10:
   756  0085                     l763:
   757  0085  0000               	nop	;# 
   758  0086  0000               	nop	;# 
   759  0087  0000               	nop	;# 
   760  0088  0000               	nop	;# 
   761  0089  0000               	nop	;# 
   762  008A  0000               	nop	;# 
   763  008B  0000               	nop	;# 
   764  008C  0000               	nop	;# 
   765  008D  0000               	nop	;# 
   766  008E  0000               	nop	;# 
   767  008F  0000               	nop	;# 
   768  0090  0000               	nop	;# 
   769  0091  0000               	nop	;# 
   770  0092  0000               	nop	;# 
   771  0093  0000               	nop	;# 
   772  0094  0000               	nop	;# 
   773  0095  0000               	nop	;# 
   774  0096  0000               	nop	;# 
   775  0097  0000               	nop	;# 
   776  0098  0000               	nop	;# 
   777  0099  0000               	nop	;# 
   778  009A  0000               	nop	;# 
   779  009B  0000               	nop	;# 
   780  009C  0000               	nop	;# 
   781  009D  0000               	nop	;# 
   782  009E  0000               	nop	;# 
   783  009F  0000               	nop	;# 
   784  00A0  0000               	nop	;# 
   785                           
   786                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 166:         ADCON0bits.GO_DONE = 1;
   787  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   788  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   789  00A3  149F               	bsf	31,1	;volatile
   790  00A4                     l82:
   791  00A4  0008               	return
   792  00A5                     __end_of_leer_datos:
   793                           
   794                           	psect	text4
   795  00A5                     __ptext4:	
   796 ;; *************** function _ISR *****************
   797 ;; Defined at:
   798 ;;		line 49 in file "C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0
   814 ;;      Temps:          3       0       0       0       0
   815 ;;      Totals:         3       0       0       0       0
   816 ;;Total ram usage:        3 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		Interrupt level 1
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _ISR
   827  00A5                     _ISR:
   828  00A5                     i1l771:
   829                           
   830                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 51:     if (PIR1bits.ADIF){
   831  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   832  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   833  00A7  1F0C               	btfss	12,6	;volatile
   834  00A8  28AA               	goto	u3_21
   835  00A9  28AB               	goto	u3_20
   836  00AA                     u3_21:
   837  00AA  28B4               	goto	i1l777
   838  00AB                     u3_20:
   839  00AB                     i1l773:
   840                           
   841                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 52:         PIR1bits.ADIF = 0;
   842  00AB  130C               	bcf	12,6	;volatile
   843  00AC                     i1l775:
   844                           
   845                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 53:         pot = ADRESH;
   846  00AC  081E               	movf	30,w	;volatile
   847  00AD  00F0               	movwf	??_ISR
   848  00AE  0870               	movf	??_ISR,w
   849  00AF  00F7               	movwf	_pot
   850                           
   851                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 54:         pot_temp = pot;
   852  00B0  0877               	movf	_pot,w
   853  00B1  00F0               	movwf	??_ISR
   854  00B2  0870               	movf	??_ISR,w
   855  00B3  00F6               	movwf	_pot_temp
   856  00B4                     i1l777:
   857                           
   858                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 57:     if (PIR1bits.SSPIF ==1){
   859  00B4  1D8C               	btfss	12,3	;volatile
   860  00B5  28B7               	goto	u4_21
   861  00B6  28B8               	goto	u4_20
   862  00B7                     u4_21:
   863  00B7  28BD               	goto	i1l65
   864  00B8                     u4_20:
   865  00B8                     i1l779:
   866                           
   867                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 58:         PIR1bits.SSPIF = 0;
   868  00B8  118C               	bcf	12,3	;volatile
   869  00B9                     i1l781:
   870                           
   871                           ;C:/Users/cabal/MPLABXProjects/ADC_slave.X/main.c: 59:         check = SSPBUF;
   872  00B9  0813               	movf	19,w	;volatile
   873  00BA  00F0               	movwf	??_ISR
   874  00BB  0870               	movf	??_ISR,w
   875  00BC  00F8               	movwf	_check
   876  00BD                     i1l65:
   877  00BD  0872               	movf	??_ISR+2,w
   878  00BE  008A               	movwf	10
   879  00BF  0E71               	swapf	??_ISR+1,w
   880  00C0  0083               	movwf	3
   881  00C1  0EFE               	swapf	btemp,f
   882  00C2  0E7E               	swapf	btemp,w
   883  00C3  0009               	retfie
   884  00C4                     __end_of_ISR:
   885  007E                     btemp	set	126	;btemp
   886  007E                     wtemp0	set	126
   887                           
   888                           	psect	intentry
   889  0004                     __pintentry:	
   890                           ;incstack = 0
   891                           ; Regs used in _ISR: [wreg]
   892                           
   893  0004                     interrupt_function:
   894  007E                     saved_w	set	btemp
   895  0004  00FE               	movwf	btemp
   896  0005  0E03               	swapf	3,w
   897  0006  00F1               	movwf	??_ISR+1
   898  0007  080A               	movf	10,w
   899  0008  00F2               	movwf	??_ISR+2
   900  0009  120A  118A  28A5   	ljmp	_ISR
   901                           
   902                           	psect	config
   903                           
   904                           ;Config register CONFIG1 @ 0x2007
   905                           ;	Oscillator Selection bits
   906                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   907                           ;	Watchdog Timer Enable bit
   908                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   909                           ;	Power-up Timer Enable bit
   910                           ;	PWRTE = OFF, PWRT disabled
   911                           ;	RE3/MCLR pin function select bit
   912                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   913                           ;	Code Protection bit
   914                           ;	CP = OFF, Program memory code protection is disabled
   915                           ;	Data Code Protection bit
   916                           ;	CPD = OFF, Data memory code protection is disabled
   917                           ;	Brown Out Reset Selection bits
   918                           ;	BOREN = OFF, BOR disabled
   919                           ;	Internal External Switchover bit
   920                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   921                           ;	Fail-Safe Clock Monitor Enabled bit
   922                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   923                           ;	Low Voltage Programming Enable bit
   924                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   925                           ;	In-Circuit Debugger Mode bit
   926                           ;	DEBUG = 0x1, unprogrammed default
   927  2007                     	org	8199
   928  2007  20D4               	dw	8404
   929                           
   930                           ;Config register CONFIG2 @ 0x2008
   931                           ;	Brown-out Reset Selection bit
   932                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   933                           ;	Flash Program Memory Self Write Enable bits
   934                           ;	WRT = OFF, Write protection off
   935  2008                     	org	8200
   936  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                         _leer_datos
                       _mandar_datos
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mandar_datos                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leer_datos                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _leer_datos
   _mandar_datos
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 21:11:16 2021

            _SSPSTATbits 0094                       l82 00A4                       l74 006F  
                     l68 0051                       l85 00C8                       u10 0085  
                     u11 0084                       u50 006B                       u51 006A  
                     u77 0076                      l711 0015                      l721 0023  
                    l713 001D                      l731 002F                      l723 0024  
                    l715 001E                      l741 003A                      l733 0030  
                    l725 002B                      l717 0021                      l751 0044  
                    l743 003D                      l735 0033                      l727 002D  
                    l719 0022                      l761 007F                      l753 0048  
                    l745 003E                      l737 0036                      l729 002E  
                    l763 0085                      l755 004F                      l747 003F  
                    l739 0039                      l765 00C4                      l757 0050  
                    l749 0040                      l791 006B                      l783 0052  
                    l793 0072                      l785 0057                      l787 0060  
                    l789 0065                      _ISR 00A5                      _pot 0077  
                   ?_ISR 0070                     i1l65 00BD                     u3_20 00AB  
                   u3_21 00AA                     u4_20 00B8                     u4_21 00B7  
                   _main 0052                     btemp 007E                     start 000C  
                  ??_ISR 0070            ?_mandar_datos 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l771 00A5                    i1l781 00B9  
                  i1l773 00AB                    i1l775 00AC                    i1l777 00B4  
                  i1l779 00B8                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _check 0078                    _setup 0015                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 007F           ??_mandar_datos 0073                   ??_main 0074  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _OSCCON 008F  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPBUF 0013  
                 _SSPCON 0014                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 0052                  ??_setup 0073  
   __end_of_mandar_datos 00C9               __pnvCOMMON 0078               __pmaintext 0052  
             __pintentry 0004                  _SSPSTAT 0094               _leer_datos 007F  
                __ptext1 0015                  __ptext2 00C4                  __ptext3 007F  
                __ptext4 00A5             __size_of_ISR 001F     end_of_initialization 0011  
              _PORTBbits 0006                _TRISAbits 0085                _TRISCbits 0087  
  __size_of_mandar_datos 0005              ?_leer_datos 0070             _mandar_datos 00C4  
    start_initialization 000F              __end_of_ISR 00C4      __size_of_leer_datos 0026  
            __pbssCOMMON 0076                ___latbits 0002           __size_of_setup 003D  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F             ??_leer_datos 0073       __end_of_leer_datos 00A5  
          __size_of_main 002D                 _pot_temp 0076               _INTCONbits 000B  
               intlevel1 0000               _SSPCONbits 0014  
