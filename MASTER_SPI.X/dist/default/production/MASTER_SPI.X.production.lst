

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 09:30:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222                           
   223                           	psect	idataBANK0
   224  05A5                     __pidataBANK0:
   225                           
   226                           ;initializer for _recibo
   227  05A5  3410               	retlw	16
   228                           
   229                           ;initializer for _espacio
   230  05A6  340D               	retlw	13
   231                           
   232                           	psect	strings
   233  0500                     __pstrings:
   234  0500                     stringtab:
   235  0500                     __stringtab:
   236                           
   237                           ;	String table - string pointers are 1 byte each
   238  0500  1BFF               	btfsc	btemp+1,7
   239  0501  2D0A               	ljmp	stringcode
   240  0502  1383               	bcf	3,7
   241  0503  187F               	btfsc	btemp+1,0
   242  0504  1783               	bsf	3,7
   243  0505  0800               	movf	0,w
   244  0506  0A84               	incf	4,f
   245  0507  1903               	skipnz
   246  0508  0AFF               	incf	btemp+1,f
   247  0509  0008               	return
   248  050A                     stringcode:
   249  050A                     stringdir:
   250  050A  3005               	movlw	high stringdir
   251  050B  008A               	movwf	10
   252  050C  0804               	movf	4,w
   253  050D  0A84               	incf	4,f
   254  050E  0782               	addwf	2,f
   255  050F                     __stringbase:
   256  050F  3400               	retlw	0
   257  0510                     __end_of__stringtab:
   258  0510                     _dpowers:
   259  0510  3401               	retlw	1
   260  0511  3400               	retlw	0
   261  0512  340A               	retlw	10
   262  0513  3400               	retlw	0
   263  0514  3464               	retlw	100
   264  0515  3400               	retlw	0
   265  0516  34E8               	retlw	232
   266  0517  3403               	retlw	3
   267  0518  3410               	retlw	16
   268  0519  3427               	retlw	39
   269  051A                     __end_of_dpowers:
   270  0019                     _TXREG	set	25
   271  0018                     _RCSTAbits	set	24
   272  000B                     _INTCONbits	set	11
   273  0014                     _SSPCON	set	20
   274  0007                     _PORTCbits	set	7
   275  0013                     _SSPBUF	set	19
   276  000C                     _PIR1bits	set	12
   277  0043                     _RD3	set	67
   278  0042                     _RD2	set	66
   279  0047                     _RD7	set	71
   280  0046                     _RD6	set	70
   281  0045                     _RD5	set	69
   282  0044                     _RD4	set	68
   283  0094                     _SSPSTATbits	set	148
   284  0099                     _SPBRG	set	153
   285  0098                     _TXSTAbits	set	152
   286  008C                     _PIE1bits	set	140
   287  0094                     _SSPSTAT	set	148
   288  0085                     _TRISAbits	set	133
   289  0087                     _TRISCbits	set	135
   290  008F                     _OSCCON	set	143
   291  0085                     _TRISA	set	133
   292  0086                     _TRISB	set	134
   293  0088                     _TRISD	set	136
   294  0187                     _BAUDCTLbits	set	391
   295  051A                     STR_1:
   296  051A  3450               	retlw	80	;'P'
   297  051B  344F               	retlw	79	;'O'
   298  051C  3454               	retlw	84	;'T'
   299  051D  3420               	retlw	32	;' '
   300  051E  3454               	retlw	84	;'T'
   301  051F  3445               	retlw	69	;'E'
   302  0520  344D               	retlw	77	;'M'
   303  0521  3420               	retlw	32	;' '
   304  0522  3443               	retlw	67	;'C'
   305  0523  344F               	retlw	79	;'O'
   306  0524  344E               	retlw	78	;'N'
   307  0525  3454               	retlw	84	;'T'
   308  0526  3400               	retlw	0
   309  0527                     STR_2:
   310  0527  3425               	retlw	37	;'%'
   311  0528  3475               	retlw	117	;'u'
   312  0529  3400               	retlw	0
   313  0527                     
   314                           	psect	cinit
   315  000F                     start_initialization:	
   316                           ; #config settings
   317                           
   318  000F                     __initialization:
   319                           
   320                           ; Initialize objects allocated to BANK0
   321  000F  120A  118A  25A5  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   322  0014  00E3               	movwf	__pdataBANK0& (0+127)
   323  0015  120A  118A  25A6  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   324  001A  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   325                           
   326                           ; Clear objects allocated to BANK0
   327  001B  1383               	bcf	3,7	;select IRP bank0
   328  001C  3020               	movlw	low __pbssBANK0
   329  001D  0084               	movwf	4
   330  001E  304A               	movlw	low (__pbssBANK0+42)
   331  001F  120A  118A  259D  120A  118A  	fcall	clear_ram0
   332                           
   333                           ; Clear objects allocated to COMMON
   334  0024  01F8               	clrf	__pbssCOMMON& (0+127)
   335  0025  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   336  0026  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   337  0027                     end_of_initialization:	
   338                           ;End of C runtime variable initialization code
   339                           
   340  0027                     __end_of__initialization:
   341  0027  0183               	clrf	3
   342  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   343                           
   344                           	psect	bssCOMMON
   345  0078                     __pbssCOMMON:
   346  0078                     _trash:
   347  0078                     	ds	1
   348  0079                     _push2:
   349  0079                     	ds	1
   350  007A                     _slave:
   351  007A                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354  0020                     __pbssBANK0:
   355  0020                     _push:
   356  0020                     	ds	1
   357  0021                     _temp:
   358  0021                     	ds	1
   359  0022                     _h:
   360  0022                     	ds	20
   361  0036                     _s:
   362  0036                     	ds	20
   363                           
   364                           	psect	dataBANK0
   365  0063                     __pdataBANK0:
   366  0063                     _recibo:
   367  0063                     	ds	1
   368  0064                     _espacio:
   369  0064                     	ds	1
   370                           
   371                           	psect	clrtext
   372  059D                     clear_ram0:	
   373                           ;	Called with FSR containing the base address, and
   374                           ;	W with the last address+1
   375                           
   376  059D  0064               	clrwdt	;clear the watchdog before getting into this loop
   377  059E                     clrloop0:
   378  059E  0180               	clrf	0	;clear RAM location pointed to by FSR
   379  059F  0A84               	incf	4,f	;increment pointer
   380  05A0  0604               	xorwf	4,w	;XOR with final address
   381  05A1  1903               	btfsc	3,2	;have we reached the end yet?
   382  05A2  3400               	retlw	0	;all done for this memory range, return
   383  05A3  0604               	xorwf	4,w	;XOR again to restore value
   384  05A4  2D9E               	goto	clrloop0	;do the next byte
   385                           
   386                           	psect	cstackCOMMON
   387  0070                     __pcstackCOMMON:
   388  0070                     ?_leer_esclavos:
   389  0070                     ?_Text_Uart:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_Lcd_Port:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_Lcd_Cmd:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_Lcd_Clear:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_Lcd_Init:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_Lcd_Write_Char:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_ISR:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_ISR:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_setup:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421  0070                     	ds	3
   422  0073                     ??_leer_esclavos:
   423  0073                     ??_Text_Uart:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0073                     ??_Lcd_Port:	
   427                           ; 1 bytes @ 0x3
   428                           
   429  0073                     ?___lwdiv:	
   430                           ; 1 bytes @ 0x3
   431                           
   432  0073                     Lcd_Port@a:	
   433                           ; 2 bytes @ 0x3
   434                           
   435  0073                     ___lwdiv@divisor:	
   436                           ; 1 bytes @ 0x3
   437                           
   438                           
   439                           ; 2 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     ??_Lcd_Cmd:
   442  0074                     ??_Lcd_Write_Char:	
   443                           ; 1 bytes @ 0x4
   444                           
   445                           
   446                           ; 1 bytes @ 0x4
   447  0074                     	ds	1
   448  0075                     Lcd_Write_Char@temp:
   449  0075                     Text_Uart@i:	
   450                           ; 1 bytes @ 0x5
   451                           
   452  0075                     ___lwdiv@dividend:	
   453                           ; 2 bytes @ 0x5
   454                           
   455                           
   456                           ; 2 bytes @ 0x5
   457  0075                     	ds	1
   458  0076                     Lcd_Cmd@a:
   459  0076                     Lcd_Write_Char@y:	
   460                           ; 1 bytes @ 0x6
   461                           
   462                           
   463                           ; 1 bytes @ 0x6
   464  0076                     	ds	1
   465  0077                     ??_Lcd_Clear:
   466  0077                     ?_Lcd_Set_Cursor:	
   467                           ; 1 bytes @ 0x7
   468                           
   469  0077                     ??_setup:	
   470                           ; 1 bytes @ 0x7
   471                           
   472  0077                     ??___lwdiv:	
   473                           ; 1 bytes @ 0x7
   474                           
   475  0077                     Lcd_Set_Cursor@b:	
   476                           ; 1 bytes @ 0x7
   477                           
   478  0077                     Lcd_Write_Char@a:	
   479                           ; 1 bytes @ 0x7
   480                           
   481  0077                     Text_Uart@text:	
   482                           ; 1 bytes @ 0x7
   483                           
   484                           
   485                           ; 1 bytes @ 0x7
   486  0077                     	ds	1
   487                           
   488                           	psect	cstackBANK0
   489  004A                     __pcstackBANK0:
   490  004A                     ??_Lcd_Set_Cursor:
   491  004A                     ??_Lcd_Init:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  004A                     ?_Lcd_Write_String:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  004A                     ___lwdiv@counter:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  004A                     Lcd_Write_String@a:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 2 bytes @ 0x0
   505  004A                     	ds	1
   506  004B                     ___lwdiv@quotient:
   507                           
   508                           ; 2 bytes @ 0x1
   509  004B                     	ds	1
   510  004C                     ??_Lcd_Write_String:
   511  004C                     Lcd_Set_Cursor@a:	
   512                           ; 1 bytes @ 0x2
   513                           
   514                           
   515                           ; 1 bytes @ 0x2
   516  004C                     	ds	1
   517  004D                     ?___lwmod:
   518  004D                     Lcd_Set_Cursor@z:	
   519                           ; 2 bytes @ 0x3
   520                           
   521  004D                     ___lwmod@divisor:	
   522                           ; 1 bytes @ 0x3
   523                           
   524                           
   525                           ; 2 bytes @ 0x3
   526  004D                     	ds	1
   527  004E                     Lcd_Set_Cursor@y:
   528                           
   529                           ; 1 bytes @ 0x4
   530  004E                     	ds	1
   531  004F                     Lcd_Set_Cursor@temp:
   532  004F                     Lcd_Write_String@i:	
   533                           ; 1 bytes @ 0x5
   534                           
   535  004F                     ___lwmod@dividend:	
   536                           ; 2 bytes @ 0x5
   537                           
   538                           
   539                           ; 2 bytes @ 0x5
   540  004F                     	ds	2
   541  0051                     ??___lwmod:
   542                           
   543                           ; 1 bytes @ 0x7
   544  0051                     	ds	1
   545  0052                     ___lwmod@counter:
   546                           
   547                           ; 1 bytes @ 0x8
   548  0052                     	ds	1
   549  0053                     ?_sprintf:
   550  0053                     sprintf@f:	
   551                           ; 2 bytes @ 0x9
   552                           
   553                           
   554                           ; 1 bytes @ 0x9
   555  0053                     	ds	3
   556  0056                     ??_sprintf:
   557                           
   558                           ; 1 bytes @ 0xC
   559  0056                     	ds	3
   560  0059                     sprintf@flag:
   561                           
   562                           ; 1 bytes @ 0xF
   563  0059                     	ds	1
   564  005A                     sprintf@ap:
   565                           
   566                           ; 1 bytes @ 0x10
   567  005A                     	ds	1
   568  005B                     sprintf@val:
   569                           
   570                           ; 2 bytes @ 0x11
   571  005B                     	ds	2
   572  005D                     sprintf@prec:
   573                           
   574                           ; 1 bytes @ 0x13
   575  005D                     	ds	1
   576  005E                     sprintf@sp:
   577                           
   578                           ; 1 bytes @ 0x14
   579  005E                     	ds	1
   580  005F                     sprintf@c:
   581                           
   582                           ; 1 bytes @ 0x15
   583  005F                     	ds	1
   584  0060                     ??_main:
   585                           
   586                           ; 1 bytes @ 0x16
   587  0060                     	ds	3
   588                           
   589                           	psect	maintext
   590  002B                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 163 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : B00/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       3       0       0       0
   613 ;;      Totals:         0       3       0       0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels required when called:    5
   616 ;; This function calls:
   617 ;;		_Lcd_Clear
   618 ;;		_Lcd_Set_Cursor
   619 ;;		_Lcd_Write_String
   620 ;;		_Text_Uart
   621 ;;		_leer_esclavos
   622 ;;		_setup
   623 ;;		_sprintf
   624 ;; This function is called by:
   625 ;;		Startup code after reset
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           
   630                           ;psect for function _main
   631  002B                     _main:
   632  002B                     l1715:	
   633                           ;incstack = 0
   634                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   635                           
   636                           
   637                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 165:     setup();
   638  002B  120A  118A  23F7  120A  118A  	fcall	_setup
   639  0030                     l134:	
   640                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 167:     while(1){
   641                           
   642                           
   643                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 169:         leer_esclavos();
   644  0030  120A  118A  21FC  120A  118A  	fcall	_leer_esclavos
   645                           
   646                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 171:         Lcd_Clear();
   647  0035  120A  118A  2590  120A  118A  	fcall	_Lcd_Clear
   648                           
   649                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 172:         Lcd_Set_Cursor(1,1);
   650  003A  01F7               	clrf	Lcd_Set_Cursor@b
   651  003B  0AF7               	incf	Lcd_Set_Cursor@b,f
   652  003C  3001               	movlw	1
   653  003D  120A  118A  2313  120A  118A  	fcall	_Lcd_Set_Cursor
   654  0042                     l1717:
   655                           
   656                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 173:         Lcd_Write_String("POT T
      +                          EM CONT");
   657  0042  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   658  0043  1283               	bcf	3,5	;RP0=0, select bank0
   659  0044  1303               	bcf	3,6	;RP1=0, select bank0
   660  0045  00CA               	movwf	Lcd_Write_String@a
   661  0046  3080               	movlw	128
   662  0047  00CB               	movwf	Lcd_Write_String@a+1
   663  0048  120A  118A  23B1  120A  118A  	fcall	_Lcd_Write_String
   664  004D                     l1719:
   665                           
   666                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 175:         Lcd_Set_Cursor(2,1);
   667  004D  01F7               	clrf	Lcd_Set_Cursor@b
   668  004E  0AF7               	incf	Lcd_Set_Cursor@b,f
   669  004F  3002               	movlw	2
   670  0050  120A  118A  2313  120A  118A  	fcall	_Lcd_Set_Cursor
   671                           
   672                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 176:         sprintf(s,"%u",recibo);
   673  0055  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   674  0056  1283               	bcf	3,5	;RP0=0, select bank0
   675  0057  1303               	bcf	3,6	;RP1=0, select bank0
   676  0058  00E0               	movwf	??_main
   677  0059  0860               	movf	??_main,w
   678  005A  00D3               	movwf	sprintf@f
   679  005B  0863               	movf	_recibo,w
   680  005C  00E1               	movwf	??_main+1
   681  005D  01E2               	clrf	??_main+2
   682  005E  0861               	movf	??_main+1,w
   683  005F  00D4               	movwf	?_sprintf+1
   684  0060  0862               	movf	??_main+2,w
   685  0061  00D5               	movwf	?_sprintf+2
   686  0062  3036               	movlw	(low (_s| 0))& (0+255)
   687  0063  120A  118A  212D  120A  118A  	fcall	_sprintf
   688                           
   689                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 177:         Lcd_Write_String(s);
   690  0068  3036               	movlw	(low (_s| 0))& (0+255)
   691  0069  1283               	bcf	3,5	;RP0=0, select bank0
   692  006A  1303               	bcf	3,6	;RP1=0, select bank0
   693  006B  00CA               	movwf	Lcd_Write_String@a
   694  006C  3000               	movlw	0
   695  006D  00CB               	movwf	Lcd_Write_String@a+1
   696  006E  120A  118A  23B1  120A  118A  	fcall	_Lcd_Write_String
   697  0073                     l1721:
   698                           
   699                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 179:         Lcd_Set_Cursor(2,5);
   700  0073  3005               	movlw	5
   701  0074  1283               	bcf	3,5	;RP0=0, select bank0
   702  0075  1303               	bcf	3,6	;RP1=0, select bank0
   703  0076  00E0               	movwf	??_main
   704  0077  0860               	movf	??_main,w
   705  0078  00F7               	movwf	Lcd_Set_Cursor@b
   706  0079  3002               	movlw	2
   707  007A  120A  118A  2313  120A  118A  	fcall	_Lcd_Set_Cursor
   708  007F                     l1723:
   709                           
   710                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 180:         temp = temp +2;
   711  007F  1283               	bcf	3,5	;RP0=0, select bank0
   712  0080  1303               	bcf	3,6	;RP1=0, select bank0
   713  0081  0821               	movf	_temp,w
   714  0082  3E02               	addlw	2
   715  0083  00E0               	movwf	??_main
   716  0084  0860               	movf	??_main,w
   717  0085  00A1               	movwf	_temp
   718  0086                     l1725:
   719                           
   720                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 181:         sprintf(s,"%u",temp);
   721  0086  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   722  0087  00E0               	movwf	??_main
   723  0088  0860               	movf	??_main,w
   724  0089  00D3               	movwf	sprintf@f
   725  008A  0821               	movf	_temp,w
   726  008B  00E1               	movwf	??_main+1
   727  008C  01E2               	clrf	??_main+2
   728  008D  0861               	movf	??_main+1,w
   729  008E  00D4               	movwf	?_sprintf+1
   730  008F  0862               	movf	??_main+2,w
   731  0090  00D5               	movwf	?_sprintf+2
   732  0091  3036               	movlw	(low (_s| 0))& (0+255)
   733  0092  120A  118A  212D  120A  118A  	fcall	_sprintf
   734  0097                     l1727:
   735                           
   736                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 182:         Lcd_Write_String(s);
   737  0097  3036               	movlw	(low (_s| 0))& (0+255)
   738  0098  1283               	bcf	3,5	;RP0=0, select bank0
   739  0099  1303               	bcf	3,6	;RP1=0, select bank0
   740  009A  00CA               	movwf	Lcd_Write_String@a
   741  009B  3000               	movlw	0
   742  009C  00CB               	movwf	Lcd_Write_String@a+1
   743  009D  120A  118A  23B1  120A  118A  	fcall	_Lcd_Write_String
   744  00A2                     l1729:
   745                           
   746                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 184:         Lcd_Set_Cursor(2,9);
   747  00A2  3009               	movlw	9
   748  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   749  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   750  00A5  00E0               	movwf	??_main
   751  00A6  0860               	movf	??_main,w
   752  00A7  00F7               	movwf	Lcd_Set_Cursor@b
   753  00A8  3002               	movlw	2
   754  00A9  120A  118A  2313  120A  118A  	fcall	_Lcd_Set_Cursor
   755  00AE                     l1731:
   756                           
   757                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 185:         sprintf(s,"%u",push);
   758  00AE  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   759  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   760  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   761  00B1  00E0               	movwf	??_main
   762  00B2  0860               	movf	??_main,w
   763  00B3  00D3               	movwf	sprintf@f
   764  00B4  0820               	movf	_push,w
   765  00B5  00E1               	movwf	??_main+1
   766  00B6  01E2               	clrf	??_main+2
   767  00B7  0861               	movf	??_main+1,w
   768  00B8  00D4               	movwf	?_sprintf+1
   769  00B9  0862               	movf	??_main+2,w
   770  00BA  00D5               	movwf	?_sprintf+2
   771  00BB  3036               	movlw	(low (_s| 0))& (0+255)
   772  00BC  120A  118A  212D  120A  118A  	fcall	_sprintf
   773  00C1                     l1733:
   774                           
   775                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 186:         Lcd_Write_String(s);
   776  00C1  3036               	movlw	(low (_s| 0))& (0+255)
   777  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   778  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   779  00C4  00CA               	movwf	Lcd_Write_String@a
   780  00C5  3000               	movlw	0
   781  00C6  00CB               	movwf	Lcd_Write_String@a+1
   782  00C7  120A  118A  23B1  120A  118A  	fcall	_Lcd_Write_String
   783  00CC                     l1735:
   784                           
   785                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 189:         sprintf(s,"%u",recibo);
   786  00CC  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   787  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   788  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   789  00CF  00E0               	movwf	??_main
   790  00D0  0860               	movf	??_main,w
   791  00D1  00D3               	movwf	sprintf@f
   792  00D2  0863               	movf	_recibo,w
   793  00D3  00E1               	movwf	??_main+1
   794  00D4  01E2               	clrf	??_main+2
   795  00D5  0861               	movf	??_main+1,w
   796  00D6  00D4               	movwf	?_sprintf+1
   797  00D7  0862               	movf	??_main+2,w
   798  00D8  00D5               	movwf	?_sprintf+2
   799  00D9  3036               	movlw	(low (_s| 0))& (0+255)
   800  00DA  120A  118A  212D  120A  118A  	fcall	_sprintf
   801  00DF                     l1737:
   802                           
   803                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 190:         Text_Uart(s);
   804  00DF  3036               	movlw	(low (_s| 0))& (0+255)
   805  00E0  120A  118A  252A  120A  118A  	fcall	_Text_Uart
   806  00E5                     l1739:
   807                           
   808                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 192:         Text_Uart(espacio);
   809  00E5  3064               	movlw	(low (_espacio| 0))& (0+255)
   810  00E6  120A  118A  252A  120A  118A  	fcall	_Text_Uart
   811  00EB                     l1741:
   812                           
   813                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 194:         sprintf(h,"%u",temp);
   814  00EB  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   815  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   816  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   817  00EE  00E0               	movwf	??_main
   818  00EF  0860               	movf	??_main,w
   819  00F0  00D3               	movwf	sprintf@f
   820  00F1  0821               	movf	_temp,w
   821  00F2  00E1               	movwf	??_main+1
   822  00F3  01E2               	clrf	??_main+2
   823  00F4  0861               	movf	??_main+1,w
   824  00F5  00D4               	movwf	?_sprintf+1
   825  00F6  0862               	movf	??_main+2,w
   826  00F7  00D5               	movwf	?_sprintf+2
   827  00F8  3022               	movlw	(low (_h| 0))& (0+255)
   828  00F9  120A  118A  212D  120A  118A  	fcall	_sprintf
   829  00FE                     l1743:
   830                           
   831                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 195:         Text_Uart(h);
   832  00FE  3022               	movlw	(low (_h| 0))& (0+255)
   833  00FF  120A  118A  252A  120A  118A  	fcall	_Text_Uart
   834  0104                     l1745:
   835                           
   836                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 197:         Text_Uart(espacio);
   837  0104  3064               	movlw	(low (_espacio| 0))& (0+255)
   838  0105  120A  118A  252A  120A  118A  	fcall	_Text_Uart
   839  010A                     l1747:
   840                           
   841                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 199:         sprintf(s,"%u",push);
   842  010A  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   843  010B  1283               	bcf	3,5	;RP0=0, select bank0
   844  010C  1303               	bcf	3,6	;RP1=0, select bank0
   845  010D  00E0               	movwf	??_main
   846  010E  0860               	movf	??_main,w
   847  010F  00D3               	movwf	sprintf@f
   848  0110  0820               	movf	_push,w
   849  0111  00E1               	movwf	??_main+1
   850  0112  01E2               	clrf	??_main+2
   851  0113  0861               	movf	??_main+1,w
   852  0114  00D4               	movwf	?_sprintf+1
   853  0115  0862               	movf	??_main+2,w
   854  0116  00D5               	movwf	?_sprintf+2
   855  0117  3036               	movlw	(low (_s| 0))& (0+255)
   856  0118  120A  118A  212D  120A  118A  	fcall	_sprintf
   857  011D                     l1749:
   858                           
   859                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 200:         Text_Uart(s);
   860  011D  3036               	movlw	(low (_s| 0))& (0+255)
   861  011E  120A  118A  252A  120A  118A  	fcall	_Text_Uart
   862  0123                     l1751:
   863                           
   864                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 202:         Text_Uart(espacio);
   865  0123  3064               	movlw	(low (_espacio| 0))& (0+255)
   866  0124  120A  118A  252A  120A  118A  	fcall	_Text_Uart
   867  0129  2830               	goto	l134
   868  012A  120A  118A  280C   	ljmp	start
   869  012D                     __end_of_main:
   870                           
   871                           	psect	text1
   872  012D                     __ptext1:	
   873 ;; *************** function _sprintf *****************
   874 ;; Defined at:
   875 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  sp              1    wreg     PTR unsigned char 
   878 ;;		 -> h(20), s(20), 
   879 ;;  f               1    9[BANK0 ] PTR const unsigned char 
   880 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
   881 ;;		 -> STR_3(3), STR_2(3), 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  sp              1   20[BANK0 ] PTR unsigned char 
   884 ;;		 -> h(20), s(20), 
   885 ;;  tmpval          4    0        struct .
   886 ;;  val             2   17[BANK0 ] unsigned int 
   887 ;;  cp              2    0        PTR const unsigned char 
   888 ;;  len             2    0        unsigned int 
   889 ;;  c               1   21[BANK0 ] unsigned char 
   890 ;;  prec            1   19[BANK0 ] char 
   891 ;;  ap              1   16[BANK0 ] PTR void [1]
   892 ;;		 -> ?_sprintf(2), 
   893 ;;  flag            1   15[BANK0 ] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2    9[BANK0 ] int 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       3       0       0       0
   904 ;;      Locals:         0       7       0       0       0
   905 ;;      Temps:          0       3       0       0       0
   906 ;;      Totals:         0      13       0       0       0
   907 ;;Total ram usage:       13 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    2
   910 ;; This function calls:
   911 ;;		___lwdiv
   912 ;;		___lwmod
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _sprintf
   920  012D                     _sprintf:
   921                           
   922                           ;incstack = 0
   923                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   924                           ;sprintf@sp stored from wreg
   925  012D  1283               	bcf	3,5	;RP0=0, select bank0
   926  012E  1303               	bcf	3,6	;RP1=0, select bank0
   927  012F  00DE               	movwf	sprintf@sp
   928  0130                     l1663:
   929                           
   930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   931  0130  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   932  0131  00D6               	movwf	??_sprintf
   933  0132  0856               	movf	??_sprintf,w
   934  0133  00DA               	movwf	sprintf@ap
   935                           
   936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   937  0134  29E5               	goto	l1705
   938  0135                     l1665:
   939                           
   940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   941  0135  3025               	movlw	37
   942  0136  065F               	xorwf	sprintf@c,w
   943  0137  1903               	btfsc	3,2
   944  0138  293A               	goto	u911
   945  0139  293B               	goto	u910
   946  013A                     u911:
   947  013A  2947               	goto	l1671
   948  013B                     u910:
   949  013B                     l1667:
   950                           
   951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   952  013B  085F               	movf	sprintf@c,w
   953  013C  00D6               	movwf	??_sprintf
   954  013D  085E               	movf	sprintf@sp,w
   955  013E  0084               	movwf	4
   956  013F  0856               	movf	??_sprintf,w
   957  0140  1383               	bcf	3,7	;select IRP bank0
   958  0141  0080               	movwf	0
   959  0142                     l1669:
   960  0142  3001               	movlw	1
   961  0143  00D6               	movwf	??_sprintf
   962  0144  0856               	movf	??_sprintf,w
   963  0145  07DE               	addwf	sprintf@sp,f
   964                           
   965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   966  0146  29E5               	goto	l1705
   967  0147                     l1671:
   968                           
   969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   970  0147  01D9               	clrf	sprintf@flag
   971                           
   972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   973  0148  294E               	goto	l1677
   974  0149                     l1673:
   975                           
   976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
   977  0149  30C0               	movlw	192
   978  014A  00D6               	movwf	??_sprintf
   979  014B  0856               	movf	??_sprintf,w
   980  014C  04D9               	iorwf	sprintf@flag,f
   981                           
   982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
   983  014D  2968               	goto	l1679
   984  014E                     l1677:
   985  014E  3001               	movlw	1
   986  014F  07D3               	addwf	sprintf@f,f
   987  0150  30FF               	movlw	-1
   988  0151  0753               	addwf	sprintf@f,w
   989  0152  0084               	movwf	4
   990  0153  120A  118A  250A  120A  118A  	fcall	stringdir
   991  0158  00DF               	movwf	sprintf@c
   992  0159  00D6               	movwf	??_sprintf
   993  015A  01D7               	clrf	??_sprintf+1
   994                           
   995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   996                           ; Switch size 1, requested type "simple"
   997                           ; Number of cases is 1, Range of values is 0 to 0
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte            4     3 (average)
  1001                           ; direct_byte           11     8 (fixed)
  1002                           ; jumptable            260     6 (fixed)
  1003                           ;	Chosen strategy is simple_byte
  1004  015B  0857               	movf	??_sprintf+1,w
  1005  015C  3A00               	xorlw	0	; case 0
  1006  015D  1903               	skipnz
  1007  015E  2960               	goto	l1773
  1008  015F  29E5               	goto	l1705
  1009  0160                     l1773:
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 2, Range of values is 0 to 117
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            7     4 (average)
  1016                           ; jumptable            260     6 (fixed)
  1017                           ;	Chosen strategy is simple_byte
  1018  0160  0856               	movf	??_sprintf,w
  1019  0161  3A00               	xorlw	0	; case 0
  1020  0162  1903               	skipnz
  1021  0163  29F7               	goto	l1707
  1022  0164  3A75               	xorlw	117	; case 117
  1023  0165  1903               	skipnz
  1024  0166  2949               	goto	l1673
  1025  0167  29E5               	goto	l1705
  1026  0168                     l1679:
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1029  0168  085A               	movf	sprintf@ap,w
  1030  0169  0084               	movwf	4
  1031  016A  1383               	bcf	3,7	;select IRP bank0
  1032  016B  0800               	movf	0,w
  1033  016C  00DB               	movwf	sprintf@val
  1034  016D  0A84               	incf	4,f
  1035  016E  0800               	movf	0,w
  1036  016F  00DC               	movwf	sprintf@val+1
  1037  0170                     l1681:
  1038  0170  3002               	movlw	2
  1039  0171  00D6               	movwf	??_sprintf
  1040  0172  0856               	movf	??_sprintf,w
  1041  0173  07DA               	addwf	sprintf@ap,f
  1042  0174                     l1683:
  1043                           
  1044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1045  0174  01DF               	clrf	sprintf@c
  1046  0175  0ADF               	incf	sprintf@c,f
  1047  0176                     l1689:
  1048                           
  1049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1050  0176  085F               	movf	sprintf@c,w
  1051  0177  00D6               	movwf	??_sprintf
  1052  0178  0756               	addwf	??_sprintf,w
  1053  0179  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1054  017A  0084               	movwf	4
  1055  017B  120A  118A  250A  120A  118A  	fcall	stringdir
  1056  0180  00D7               	movwf	??_sprintf+1
  1057  0181  120A  118A  250A  120A  118A  	fcall	stringdir
  1058  0186  00D8               	movwf	??_sprintf+2
  1059  0187  0858               	movf	??_sprintf+2,w
  1060  0188  025C               	subwf	sprintf@val+1,w
  1061  0189  1D03               	skipz
  1062  018A  298D               	goto	u925
  1063  018B  0857               	movf	??_sprintf+1,w
  1064  018C  025B               	subwf	sprintf@val,w
  1065  018D                     u925:
  1066  018D  1803               	skipnc
  1067  018E  2990               	goto	u921
  1068  018F  2991               	goto	u920
  1069  0190                     u921:
  1070  0190  2992               	goto	l1693
  1071  0191                     u920:
  1072  0191  299C               	goto	l1695
  1073  0192                     l1693:
  1074  0192  3001               	movlw	1
  1075  0193  00D6               	movwf	??_sprintf
  1076  0194  0856               	movf	??_sprintf,w
  1077  0195  07DF               	addwf	sprintf@c,f
  1078  0196  3005               	movlw	5
  1079  0197  065F               	xorwf	sprintf@c,w
  1080  0198  1D03               	btfss	3,2
  1081  0199  299B               	goto	u931
  1082  019A  299C               	goto	u930
  1083  019B                     u931:
  1084  019B  2976               	goto	l1689
  1085  019C                     u930:
  1086  019C                     l1695:
  1087                           
  1088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1089  019C  085F               	movf	sprintf@c,w
  1090  019D  00D6               	movwf	??_sprintf
  1091  019E  0856               	movf	??_sprintf,w
  1092  019F  00DD               	movwf	sprintf@prec
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1095  01A0  29DC               	goto	l1703
  1096  01A1                     l1697:
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1099  01A1  300A               	movlw	10
  1100  01A2  00CD               	movwf	___lwmod@divisor
  1101  01A3  3000               	movlw	0
  1102  01A4  00CE               	movwf	___lwmod@divisor+1
  1103  01A5  085D               	movf	sprintf@prec,w
  1104  01A6  00D6               	movwf	??_sprintf
  1105  01A7  0756               	addwf	??_sprintf,w
  1106  01A8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1107  01A9  0084               	movwf	4
  1108  01AA  120A  118A  250A  120A  118A  	fcall	stringdir
  1109  01AF  00F3               	movwf	___lwdiv@divisor
  1110  01B0  120A  118A  250A  120A  118A  	fcall	stringdir
  1111  01B5  00F4               	movwf	___lwdiv@divisor+1
  1112  01B6  085C               	movf	sprintf@val+1,w
  1113  01B7  00F6               	movwf	___lwdiv@dividend+1
  1114  01B8  085B               	movf	sprintf@val,w
  1115  01B9  00F5               	movwf	___lwdiv@dividend
  1116  01BA  120A  118A  236B  120A  118A  	fcall	___lwdiv
  1117  01BF  0874               	movf	?___lwdiv+1,w
  1118  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1119  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1120  01C2  00D0               	movwf	___lwmod@dividend+1
  1121  01C3  0873               	movf	?___lwdiv,w
  1122  01C4  00CF               	movwf	___lwmod@dividend
  1123  01C5  120A  118A  2436  120A  118A  	fcall	___lwmod
  1124  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1125  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1126  01CC  084D               	movf	?___lwmod,w
  1127  01CD  3E30               	addlw	48
  1128  01CE  00D7               	movwf	??_sprintf+1
  1129  01CF  0857               	movf	??_sprintf+1,w
  1130  01D0  00DF               	movwf	sprintf@c
  1131  01D1                     l1699:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1134  01D1  085F               	movf	sprintf@c,w
  1135  01D2  00D6               	movwf	??_sprintf
  1136  01D3  085E               	movf	sprintf@sp,w
  1137  01D4  0084               	movwf	4
  1138  01D5  0856               	movf	??_sprintf,w
  1139  01D6  1383               	bcf	3,7	;select IRP bank0
  1140  01D7  0080               	movwf	0
  1141  01D8                     l1701:
  1142  01D8  3001               	movlw	1
  1143  01D9  00D6               	movwf	??_sprintf
  1144  01DA  0856               	movf	??_sprintf,w
  1145  01DB  07DE               	addwf	sprintf@sp,f
  1146  01DC                     l1703:
  1147                           
  1148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1149  01DC  30FF               	movlw	255
  1150  01DD  00D6               	movwf	??_sprintf
  1151  01DE  0856               	movf	??_sprintf,w
  1152  01DF  07DD               	addwf	sprintf@prec,f
  1153  01E0  0A5D               	incf	sprintf@prec,w
  1154  01E1  1D03               	btfss	3,2
  1155  01E2  29E4               	goto	u941
  1156  01E3  29E5               	goto	u940
  1157  01E4                     u941:
  1158  01E4  29A1               	goto	l1697
  1159  01E5                     u940:
  1160  01E5                     l1705:
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1163  01E5  3001               	movlw	1
  1164  01E6  07D3               	addwf	sprintf@f,f
  1165  01E7  30FF               	movlw	-1
  1166  01E8  0753               	addwf	sprintf@f,w
  1167  01E9  0084               	movwf	4
  1168  01EA  120A  118A  250A  120A  118A  	fcall	stringdir
  1169  01EF  00D6               	movwf	??_sprintf
  1170  01F0  0856               	movf	??_sprintf,w
  1171  01F1  00DF               	movwf	sprintf@c
  1172  01F2  085F               	movf	sprintf@c,w
  1173  01F3  1D03               	btfss	3,2
  1174  01F4  29F6               	goto	u951
  1175  01F5  29F7               	goto	u950
  1176  01F6                     u951:
  1177  01F6  2935               	goto	l1665
  1178  01F7                     u950:
  1179  01F7                     l1707:
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1182  01F7  085E               	movf	sprintf@sp,w
  1183  01F8  0084               	movwf	4
  1184  01F9  1383               	bcf	3,7	;select IRP bank0
  1185  01FA  0180               	clrf	0
  1186  01FB                     l261:
  1187  01FB  0008               	return
  1188  01FC                     __end_of_sprintf:
  1189                           
  1190                           	psect	text2
  1191  0436                     __ptext2:	
  1192 ;; *************** function ___lwmod *****************
  1193 ;; Defined at:
  1194 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  divisor         2    3[BANK0 ] unsigned int 
  1197 ;;  dividend        2    5[BANK0 ] unsigned int 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  counter         1    8[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  2    3[BANK0 ] unsigned int 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       4       0       0       0
  1210 ;;      Locals:         0       1       0       0       0
  1211 ;;      Temps:          0       1       0       0       0
  1212 ;;      Totals:         0       6       0       0       0
  1213 ;;Total ram usage:        6 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_sprintf
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function ___lwmod
  1225  0436                     ___lwmod:
  1226  0436                     l1231:	
  1227                           ;incstack = 0
  1228                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1229                           
  1230  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0438  084D               	movf	___lwmod@divisor,w
  1233  0439  044E               	iorwf	___lwmod@divisor+1,w
  1234  043A  1903               	btfsc	3,2
  1235  043B  2C3D               	goto	u511
  1236  043C  2C3E               	goto	u510
  1237  043D                     u511:
  1238  043D  2C6D               	goto	l1249
  1239  043E                     u510:
  1240  043E                     l1233:
  1241  043E  01D2               	clrf	___lwmod@counter
  1242  043F  0AD2               	incf	___lwmod@counter,f
  1243  0440  2C4C               	goto	l1239
  1244  0441                     l1235:
  1245  0441  3001               	movlw	1
  1246  0442                     u525:
  1247  0442  1003               	clrc
  1248  0443  0DCD               	rlf	___lwmod@divisor,f
  1249  0444  0DCE               	rlf	___lwmod@divisor+1,f
  1250  0445  3EFF               	addlw	-1
  1251  0446  1D03               	skipz
  1252  0447  2C42               	goto	u525
  1253  0448                     l1237:
  1254  0448  3001               	movlw	1
  1255  0449  00D1               	movwf	??___lwmod
  1256  044A  0851               	movf	??___lwmod,w
  1257  044B  07D2               	addwf	___lwmod@counter,f
  1258  044C                     l1239:
  1259  044C  1FCE               	btfss	___lwmod@divisor+1,7
  1260  044D  2C4F               	goto	u531
  1261  044E  2C50               	goto	u530
  1262  044F                     u531:
  1263  044F  2C41               	goto	l1235
  1264  0450                     u530:
  1265  0450                     l1241:
  1266  0450  084E               	movf	___lwmod@divisor+1,w
  1267  0451  0250               	subwf	___lwmod@dividend+1,w
  1268  0452  1D03               	skipz
  1269  0453  2C56               	goto	u545
  1270  0454  084D               	movf	___lwmod@divisor,w
  1271  0455  024F               	subwf	___lwmod@dividend,w
  1272  0456                     u545:
  1273  0456  1C03               	skipc
  1274  0457  2C59               	goto	u541
  1275  0458  2C5A               	goto	u540
  1276  0459                     u541:
  1277  0459  2C60               	goto	l1245
  1278  045A                     u540:
  1279  045A                     l1243:
  1280  045A  084D               	movf	___lwmod@divisor,w
  1281  045B  02CF               	subwf	___lwmod@dividend,f
  1282  045C  084E               	movf	___lwmod@divisor+1,w
  1283  045D  1C03               	skipc
  1284  045E  03D0               	decf	___lwmod@dividend+1,f
  1285  045F  02D0               	subwf	___lwmod@dividend+1,f
  1286  0460                     l1245:
  1287  0460  3001               	movlw	1
  1288  0461                     u555:
  1289  0461  1003               	clrc
  1290  0462  0CCE               	rrf	___lwmod@divisor+1,f
  1291  0463  0CCD               	rrf	___lwmod@divisor,f
  1292  0464  3EFF               	addlw	-1
  1293  0465  1D03               	skipz
  1294  0466  2C61               	goto	u555
  1295  0467                     l1247:
  1296  0467  3001               	movlw	1
  1297  0468  02D2               	subwf	___lwmod@counter,f
  1298  0469  1D03               	btfss	3,2
  1299  046A  2C6C               	goto	u561
  1300  046B  2C6D               	goto	u560
  1301  046C                     u561:
  1302  046C  2C50               	goto	l1241
  1303  046D                     u560:
  1304  046D                     l1249:
  1305  046D  0850               	movf	___lwmod@dividend+1,w
  1306  046E  00CE               	movwf	?___lwmod+1
  1307  046F  084F               	movf	___lwmod@dividend,w
  1308  0470  00CD               	movwf	?___lwmod
  1309  0471                     l547:
  1310  0471  0008               	return
  1311  0472                     __end_of___lwmod:
  1312                           
  1313                           	psect	text3
  1314  036B                     __ptext3:	
  1315 ;; *************** function ___lwdiv *****************
  1316 ;; Defined at:
  1317 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  divisor         2    3[COMMON] unsigned int 
  1320 ;;  dividend        2    5[COMMON] unsigned int 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  quotient        2    1[BANK0 ] unsigned int 
  1323 ;;  counter         1    0[BANK0 ] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2    3[COMMON] unsigned int 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         4       0       0       0       0
  1334 ;;      Locals:         0       3       0       0       0
  1335 ;;      Temps:          1       0       0       0       0
  1336 ;;      Totals:         5       3       0       0       0
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_sprintf
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function ___lwdiv
  1349  036B                     ___lwdiv:
  1350  036B                     l1549:	
  1351                           ;incstack = 0
  1352                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1353                           
  1354  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1355  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1356  036D  01CB               	clrf	___lwdiv@quotient
  1357  036E  01CC               	clrf	___lwdiv@quotient+1
  1358  036F                     l1551:
  1359  036F  0873               	movf	___lwdiv@divisor,w
  1360  0370  0474               	iorwf	___lwdiv@divisor+1,w
  1361  0371  1903               	btfsc	3,2
  1362  0372  2B74               	goto	u771
  1363  0373  2B75               	goto	u770
  1364  0374                     u771:
  1365  0374  2BAC               	goto	l1571
  1366  0375                     u770:
  1367  0375                     l1553:
  1368  0375  01CA               	clrf	___lwdiv@counter
  1369  0376  0ACA               	incf	___lwdiv@counter,f
  1370  0377  2B83               	goto	l1559
  1371  0378                     l1555:
  1372  0378  3001               	movlw	1
  1373  0379                     u785:
  1374  0379  1003               	clrc
  1375  037A  0DF3               	rlf	___lwdiv@divisor,f
  1376  037B  0DF4               	rlf	___lwdiv@divisor+1,f
  1377  037C  3EFF               	addlw	-1
  1378  037D  1D03               	skipz
  1379  037E  2B79               	goto	u785
  1380  037F                     l1557:
  1381  037F  3001               	movlw	1
  1382  0380  00F7               	movwf	??___lwdiv
  1383  0381  0877               	movf	??___lwdiv,w
  1384  0382  07CA               	addwf	___lwdiv@counter,f
  1385  0383                     l1559:
  1386  0383  1FF4               	btfss	___lwdiv@divisor+1,7
  1387  0384  2B86               	goto	u791
  1388  0385  2B87               	goto	u790
  1389  0386                     u791:
  1390  0386  2B78               	goto	l1555
  1391  0387                     u790:
  1392  0387                     l1561:
  1393  0387  3001               	movlw	1
  1394  0388                     u805:
  1395  0388  1003               	clrc
  1396  0389  0DCB               	rlf	___lwdiv@quotient,f
  1397  038A  0DCC               	rlf	___lwdiv@quotient+1,f
  1398  038B  3EFF               	addlw	-1
  1399  038C  1D03               	skipz
  1400  038D  2B88               	goto	u805
  1401  038E  0874               	movf	___lwdiv@divisor+1,w
  1402  038F  0276               	subwf	___lwdiv@dividend+1,w
  1403  0390  1D03               	skipz
  1404  0391  2B94               	goto	u815
  1405  0392  0873               	movf	___lwdiv@divisor,w
  1406  0393  0275               	subwf	___lwdiv@dividend,w
  1407  0394                     u815:
  1408  0394  1C03               	skipc
  1409  0395  2B97               	goto	u811
  1410  0396  2B98               	goto	u810
  1411  0397                     u811:
  1412  0397  2B9F               	goto	l1567
  1413  0398                     u810:
  1414  0398                     l1563:
  1415  0398  0873               	movf	___lwdiv@divisor,w
  1416  0399  02F5               	subwf	___lwdiv@dividend,f
  1417  039A  0874               	movf	___lwdiv@divisor+1,w
  1418  039B  1C03               	skipc
  1419  039C  03F6               	decf	___lwdiv@dividend+1,f
  1420  039D  02F6               	subwf	___lwdiv@dividend+1,f
  1421  039E                     l1565:
  1422  039E  144B               	bsf	___lwdiv@quotient,0
  1423  039F                     l1567:
  1424  039F  3001               	movlw	1
  1425  03A0                     u825:
  1426  03A0  1003               	clrc
  1427  03A1  0CF4               	rrf	___lwdiv@divisor+1,f
  1428  03A2  0CF3               	rrf	___lwdiv@divisor,f
  1429  03A3  3EFF               	addlw	-1
  1430  03A4  1D03               	skipz
  1431  03A5  2BA0               	goto	u825
  1432  03A6                     l1569:
  1433  03A6  3001               	movlw	1
  1434  03A7  02CA               	subwf	___lwdiv@counter,f
  1435  03A8  1D03               	btfss	3,2
  1436  03A9  2BAB               	goto	u831
  1437  03AA  2BAC               	goto	u830
  1438  03AB                     u831:
  1439  03AB  2B87               	goto	l1561
  1440  03AC                     u830:
  1441  03AC                     l1571:
  1442  03AC  084C               	movf	___lwdiv@quotient+1,w
  1443  03AD  00F4               	movwf	?___lwdiv+1
  1444  03AE  084B               	movf	___lwdiv@quotient,w
  1445  03AF  00F3               	movwf	?___lwdiv
  1446  03B0                     l537:
  1447  03B0  0008               	return
  1448  03B1                     __end_of___lwdiv:
  1449                           
  1450                           	psect	text4
  1451  03F7                     __ptext4:	
  1452 ;; *************** function _setup *****************
  1453 ;; Defined at:
  1454 ;;		line 86 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		_Lcd_Init
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _setup
  1484  03F7                     _setup:
  1485  03F7                     l1603:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1488                           
  1489                           
  1490                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 88:     TRISD = 0;
  1491  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1492  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1493  03F9  0188               	clrf	8	;volatile
  1494                           
  1495                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 89:     TRISD = 0;
  1496  03FA  0188               	clrf	8	;volatile
  1497                           
  1498                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 90:     TRISB = 0;
  1499  03FB  0186               	clrf	6	;volatile
  1500  03FC                     l1605:
  1501                           
  1502                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 91:     TRISA = 255;
  1503  03FC  30FF               	movlw	255
  1504  03FD  0085               	movwf	5	;volatile
  1505  03FE                     l1607:
  1506                           
  1507                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 93:     OSCCON = 0b01110101;
  1508  03FE  3075               	movlw	117
  1509  03FF  008F               	movwf	15	;volatile
  1510  0400                     l1609:
  1511                           
  1512                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 102:     TRISCbits.TRISC4 = 1;
  1513  0400  1607               	bsf	7,4	;volatile
  1514  0401                     l1611:
  1515                           
  1516                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 103:     TRISCbits.TRISC0 = 0;
  1517  0401  1007               	bcf	7,0	;volatile
  1518  0402                     l1613:
  1519                           
  1520                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 104:     TRISCbits.TRISC1 = 0;
  1521  0402  1087               	bcf	7,1	;volatile
  1522  0403                     l1615:
  1523                           
  1524                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 105:     TRISCbits.TRISC2 = 0;
  1525  0403  1107               	bcf	7,2	;volatile
  1526  0404                     l1617:
  1527                           
  1528                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 106:     PORTCbits.RC0 = 1;
  1529  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0405  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0406  1407               	bsf	7,0	;volatile
  1532  0407                     l1619:
  1533                           
  1534                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 107:     PORTCbits.RC1 = 1;
  1535  0407  1487               	bsf	7,1	;volatile
  1536  0408                     l1621:
  1537                           
  1538                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 108:     PORTCbits.RC2 = 1;
  1539  0408  1507               	bsf	7,2	;volatile
  1540  0409                     l1623:
  1541                           
  1542                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 110:     TRISCbits.TRISC3 = 0;
  1543  0409  1683               	bsf	3,5	;RP0=1, select bank1
  1544  040A  1303               	bcf	3,6	;RP1=0, select bank1
  1545  040B  1187               	bcf	7,3	;volatile
  1546  040C                     l1625:
  1547                           
  1548                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 111:     TRISCbits.TRISC5 = 0;
  1549  040C  1287               	bcf	7,5	;volatile
  1550  040D                     l1627:
  1551                           
  1552                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 112:     TRISAbits.TRISA5 = 1;
  1553  040D  1685               	bsf	5,5	;volatile
  1554  040E                     l1629:
  1555                           
  1556                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 114:     SSPSTAT = 0b01000000;
  1557  040E  3040               	movlw	64
  1558  040F  0094               	movwf	20	;volatile
  1559  0410                     l1631:
  1560                           
  1561                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 131:     SSPCON = 0b00100000;
  1562  0410  3020               	movlw	32
  1563  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0413  0094               	movwf	20	;volatile
  1566  0414                     l1633:
  1567                           
  1568                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 135:     (INTCONbits.GIE = 1);
  1569  0414  178B               	bsf	11,7	;volatile
  1570  0415                     l1635:
  1571                           
  1572                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 136:     INTCONbits.GIE = 1;
  1573  0415  178B               	bsf	11,7	;volatile
  1574  0416                     l1637:
  1575                           
  1576                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 137:     INTCONbits.PEIE = 1;
  1577  0416  170B               	bsf	11,6	;volatile
  1578  0417                     l1639:
  1579                           
  1580                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 138:     PIE1bits.SSPIE = 0;
  1581  0417  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0418  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0419  118C               	bcf	12,3	;volatile
  1584  041A                     l1641:
  1585                           
  1586                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 139:     PIR1bits.SSPIF = 0;
  1587  041A  1283               	bcf	3,5	;RP0=0, select bank0
  1588  041B  1303               	bcf	3,6	;RP1=0, select bank0
  1589  041C  118C               	bcf	12,3	;volatile
  1590  041D                     l1643:
  1591                           
  1592                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 141:     Lcd_Init();
  1593  041D  120A  118A  22B1  120A  118A  	fcall	_Lcd_Init
  1594  0422                     l1645:
  1595                           
  1596                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 144:     TXSTAbits.TXEN = 1;
  1597  0422  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0423  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0424  1698               	bsf	24,5	;volatile
  1600  0425                     l1647:
  1601                           
  1602                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 145:     TXSTAbits.SYNC = 0;
  1603  0425  1218               	bcf	24,4	;volatile
  1604  0426                     l1649:
  1605                           
  1606                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 146:     RCSTAbits.SPEN = 1;
  1607  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0428  1798               	bsf	24,7	;volatile
  1610  0429                     l1651:
  1611                           
  1612                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 147:     TXSTAbits.TX9 = 0;
  1613  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1614  042A  1303               	bcf	3,6	;RP1=0, select bank1
  1615  042B  1318               	bcf	24,6	;volatile
  1616  042C                     l1653:
  1617                           
  1618                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 150:     TXSTAbits.BRGH = 0;
  1619  042C  1118               	bcf	24,2	;volatile
  1620  042D                     l1655:
  1621                           
  1622                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 151:     BAUDCTLbits.BRG16 = 0;
  1623  042D  1683               	bsf	3,5	;RP0=1, select bank3
  1624  042E  1703               	bsf	3,6	;RP1=1, select bank3
  1625  042F  1187               	bcf	7,3	;volatile
  1626  0430                     l1657:
  1627                           
  1628                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 152:     SPBRG = 12;
  1629  0430  300C               	movlw	12
  1630  0431  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0432  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0433  0099               	movwf	25	;volatile
  1633  0434                     l1659:
  1634                           
  1635                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 155:     PIE1bits.TXIE = 0;
  1636  0434  120C               	bcf	12,4	;volatile
  1637  0435                     l129:
  1638  0435  0008               	return
  1639  0436                     __end_of_setup:
  1640                           
  1641                           	psect	text5
  1642  02B1                     __ptext5:	
  1643 ;; *************** function _Lcd_Init *****************
  1644 ;; Defined at:
  1645 ;;		line 62 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0
  1661 ;;      Temps:          0       2       0       0       0
  1662 ;;      Totals:         0       2       0       0       0
  1663 ;;Total ram usage:        2 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    3
  1666 ;; This function calls:
  1667 ;;		_Lcd_Cmd
  1668 ;;		_Lcd_Port
  1669 ;; This function is called by:
  1670 ;;		_setup
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _Lcd_Init
  1676  02B1                     _Lcd_Init:
  1677  02B1                     l1539:	
  1678                           ;incstack = 0
  1679                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1680                           
  1681                           
  1682                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 64:   Lcd_Port(0x00);
  1683  02B1  3000               	movlw	0
  1684  02B2  120A  118A  2554  120A  118A  	fcall	_Lcd_Port
  1685  02B7                     l1541:
  1686                           
  1687                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 65:    _delay((unsigned long)((20)*(8
      +                          000000/4000.0)));
  1688  02B7  3034               	movlw	52
  1689  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1690  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1691  02BA  00CB               	movwf	??_Lcd_Init+1
  1692  02BB  30F1               	movlw	241
  1693  02BC  00CA               	movwf	??_Lcd_Init
  1694  02BD                     u967:
  1695  02BD  0BCA               	decfsz	??_Lcd_Init,f
  1696  02BE  2ABD               	goto	u967
  1697  02BF  0BCB               	decfsz	??_Lcd_Init+1,f
  1698  02C0  2ABD               	goto	u967
  1699  02C1                     l1543:
  1700                           
  1701                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 66:   Lcd_Cmd(0x03);
  1702  02C1  3003               	movlw	3
  1703  02C2  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1704                           
  1705                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 67:  _delay((unsigned long)((5)*(8000
      +                          000/4000.0)));
  1706  02C7  300D               	movlw	13
  1707  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1708  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1709  02CA  00CB               	movwf	??_Lcd_Init+1
  1710  02CB  30FB               	movlw	251
  1711  02CC  00CA               	movwf	??_Lcd_Init
  1712  02CD                     u977:
  1713  02CD  0BCA               	decfsz	??_Lcd_Init,f
  1714  02CE  2ACD               	goto	u977
  1715  02CF  0BCB               	decfsz	??_Lcd_Init+1,f
  1716  02D0  2ACD               	goto	u977
  1717  02D1                     l1545:
  1718                           
  1719                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 68:   Lcd_Cmd(0x03);
  1720  02D1  3003               	movlw	3
  1721  02D2  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1722  02D7                     l1547:
  1723                           
  1724                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 69:  _delay((unsigned long)((11)*(800
      +                          0000/4000.0)));
  1725  02D7  301D               	movlw	29
  1726  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1727  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1728  02DA  00CB               	movwf	??_Lcd_Init+1
  1729  02DB  3090               	movlw	144
  1730  02DC  00CA               	movwf	??_Lcd_Init
  1731  02DD                     u987:
  1732  02DD  0BCA               	decfsz	??_Lcd_Init,f
  1733  02DE  2ADD               	goto	u987
  1734  02DF  0BCB               	decfsz	??_Lcd_Init+1,f
  1735  02E0  2ADD               	goto	u987
  1736  02E1  0000               	nop
  1737                           
  1738                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 70:   Lcd_Cmd(0x03);
  1739  02E2  3003               	movlw	3
  1740  02E3  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1741                           
  1742                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 72:   Lcd_Cmd(0x02);
  1743  02E8  3002               	movlw	2
  1744  02E9  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1745                           
  1746                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 73:   Lcd_Cmd(0x02);
  1747  02EE  3002               	movlw	2
  1748  02EF  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1749                           
  1750                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 74:   Lcd_Cmd(0x08);
  1751  02F4  3008               	movlw	8
  1752  02F5  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1753                           
  1754                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 75:   Lcd_Cmd(0x00);
  1755  02FA  3000               	movlw	0
  1756  02FB  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1757                           
  1758                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 76:   Lcd_Cmd(0x0C);
  1759  0300  300C               	movlw	12
  1760  0301  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1761                           
  1762                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 77:   Lcd_Cmd(0x00);
  1763  0306  3000               	movlw	0
  1764  0307  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1765                           
  1766                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 78:   Lcd_Cmd(0x06);
  1767  030C  3006               	movlw	6
  1768  030D  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  1769  0312                     l84:
  1770  0312  0008               	return
  1771  0313                     __end_of_Lcd_Init:
  1772                           
  1773                           	psect	text6
  1774  01FC                     __ptext6:	
  1775 ;; *************** function _leer_esclavos *****************
  1776 ;; Defined at:
  1777 ;;		line 208 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          3       0       0       0       0
  1794 ;;      Totals:         3       0       0       0       0
  1795 ;;Total ram usage:        3 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _leer_esclavos
  1807  01FC                     _leer_esclavos:
  1808  01FC                     l1343:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _leer_esclavos: [wreg]
  1811                           
  1812                           
  1813                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 209:     PORTCbits.RC0 = 1;
  1814  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1815  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1816  01FE  1407               	bsf	7,0	;volatile
  1817                           
  1818                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 210:     PORTCbits.RC1 = 1;
  1819  01FF  1487               	bsf	7,1	;volatile
  1820                           
  1821                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 211:     PORTCbits.RC2 = 1;
  1822  0200  1507               	bsf	7,2	;volatile
  1823  0201                     l1345:
  1824                           
  1825                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 212:     _delay((unsigned long)((1)*
      +                          (8000000/4000.0)));
  1826  0201  3003               	movlw	3
  1827  0202  00F4               	movwf	??_leer_esclavos+1
  1828  0203  3097               	movlw	151
  1829  0204  00F3               	movwf	??_leer_esclavos
  1830  0205                     u997:
  1831  0205  0BF3               	decfsz	??_leer_esclavos,f
  1832  0206  2A05               	goto	u997
  1833  0207  0BF4               	decfsz	??_leer_esclavos+1,f
  1834  0208  2A05               	goto	u997
  1835  0209  2A0A               	nop2
  1836                           
  1837                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 215:     trash = SSPBUF;
  1838  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1839  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1840  020C  0813               	movf	19,w	;volatile
  1841  020D  00F3               	movwf	??_leer_esclavos
  1842  020E  0873               	movf	??_leer_esclavos,w
  1843  020F  00F8               	movwf	_trash
  1844  0210                     l1347:
  1845                           
  1846                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 216:     PORTCbits.RC0 = 1;
  1847  0210  1407               	bsf	7,0	;volatile
  1848  0211                     l1349:
  1849                           
  1850                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 217:     PORTCbits.RC1 = 1;
  1851  0211  1487               	bsf	7,1	;volatile
  1852  0212                     l1351:
  1853                           
  1854                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 218:     PORTCbits.RC2 = 0;
  1855  0212  1107               	bcf	7,2	;volatile
  1856                           
  1857                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 219:     _delay((unsigned long)((500
      +                          )*(8000000/4000.0)));
  1858  0213  3006               	movlw	6
  1859  0214  00F5               	movwf	??_leer_esclavos+2
  1860  0215  3013               	movlw	19
  1861  0216  00F4               	movwf	??_leer_esclavos+1
  1862  0217  30AD               	movlw	173
  1863  0218  00F3               	movwf	??_leer_esclavos
  1864  0219                     u1007:
  1865  0219  0BF3               	decfsz	??_leer_esclavos,f
  1866  021A  2A19               	goto	u1007
  1867  021B  0BF4               	decfsz	??_leer_esclavos+1,f
  1868  021C  2A19               	goto	u1007
  1869  021D  0BF5               	decfsz	??_leer_esclavos+2,f
  1870  021E  2A19               	goto	u1007
  1871  021F  2A20               	nop2
  1872                           
  1873                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 220:     SSPBUF = 0x61;
  1874  0220  3061               	movlw	97
  1875  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0223  0093               	movwf	19	;volatile
  1878                           
  1879                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 222:     while (SSPSTATbits.BF==1){
  1880  0224  2A26               	goto	l140
  1881  0225                     l141:
  1882  0225  0000               	nop	;# 
  1883  0226                     l140:	
  1884                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 224:     }
  1885                           
  1886                           
  1887                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 222:     while (SSPSTATbits.BF==1){
  1888  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0228  1814               	btfsc	20,0	;volatile
  1891  0229  2A2B               	goto	u641
  1892  022A  2A2C               	goto	u640
  1893  022B                     u641:
  1894  022B  2A25               	goto	l141
  1895  022C                     u640:
  1896  022C                     l1353:
  1897                           
  1898                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 225:     temp = SSPBUF;
  1899  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1900  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1901  022E  0813               	movf	19,w	;volatile
  1902  022F  00F3               	movwf	??_leer_esclavos
  1903  0230  0873               	movf	??_leer_esclavos,w
  1904  0231  00A1               	movwf	_temp
  1905  0232                     l1355:
  1906                           
  1907                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 228:     PORTCbits.RC0 = 1;
  1908  0232  1407               	bsf	7,0	;volatile
  1909  0233                     l1357:
  1910                           
  1911                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 229:     PORTCbits.RC1 = 1;
  1912  0233  1487               	bsf	7,1	;volatile
  1913  0234                     l1359:
  1914                           
  1915                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 230:     PORTCbits.RC2 = 1;
  1916  0234  1507               	bsf	7,2	;volatile
  1917                           
  1918                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 231:     _delay((unsigned long)((99)
      +                          *(8000000/4000.0)));
  1919  0235  3002               	movlw	2
  1920  0236  00F5               	movwf	??_leer_esclavos+2
  1921  0237  3002               	movlw	2
  1922  0238  00F4               	movwf	??_leer_esclavos+1
  1923  0239  3021               	movlw	33
  1924  023A  00F3               	movwf	??_leer_esclavos
  1925  023B                     u1017:
  1926  023B  0BF3               	decfsz	??_leer_esclavos,f
  1927  023C  2A3B               	goto	u1017
  1928  023D  0BF4               	decfsz	??_leer_esclavos+1,f
  1929  023E  2A3B               	goto	u1017
  1930  023F  0BF5               	decfsz	??_leer_esclavos+2,f
  1931  0240  2A3B               	goto	u1017
  1932                           
  1933                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 236:     trash = SSPBUF;
  1934  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0243  0813               	movf	19,w	;volatile
  1937  0244  00F3               	movwf	??_leer_esclavos
  1938  0245  0873               	movf	??_leer_esclavos,w
  1939  0246  00F8               	movwf	_trash
  1940  0247                     l1361:
  1941                           
  1942                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 237:     PORTCbits.RC0 = 1;
  1943  0247  1407               	bsf	7,0	;volatile
  1944  0248                     l1363:
  1945                           
  1946                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 238:     PORTCbits.RC1 = 0;
  1947  0248  1087               	bcf	7,1	;volatile
  1948  0249                     l1365:
  1949                           
  1950                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 239:     PORTCbits.RC2 = 1;
  1951  0249  1507               	bsf	7,2	;volatile
  1952                           
  1953                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 240:     _delay((unsigned long)((500
      +                          )*(8000000/4000.0)));
  1954  024A  3006               	movlw	6
  1955  024B  00F5               	movwf	??_leer_esclavos+2
  1956  024C  3013               	movlw	19
  1957  024D  00F4               	movwf	??_leer_esclavos+1
  1958  024E  30AD               	movlw	173
  1959  024F  00F3               	movwf	??_leer_esclavos
  1960  0250                     u1027:
  1961  0250  0BF3               	decfsz	??_leer_esclavos,f
  1962  0251  2A50               	goto	u1027
  1963  0252  0BF4               	decfsz	??_leer_esclavos+1,f
  1964  0253  2A50               	goto	u1027
  1965  0254  0BF5               	decfsz	??_leer_esclavos+2,f
  1966  0255  2A50               	goto	u1027
  1967  0256  2A57               	nop2
  1968                           
  1969                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 241:     SSPBUF = 0x61;
  1970  0257  3061               	movlw	97
  1971  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1973  025A  0093               	movwf	19	;volatile
  1974                           
  1975                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 242:     while (SSPSTATbits.BF==1){
  1976  025B  2A5D               	goto	l143
  1977  025C                     l144:
  1978  025C  0000               	nop	;# 
  1979  025D                     l143:	
  1980                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 244:     }
  1981                           
  1982                           
  1983                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 242:     while (SSPSTATbits.BF==1){
  1984  025D  1683               	bsf	3,5	;RP0=1, select bank1
  1985  025E  1303               	bcf	3,6	;RP1=0, select bank1
  1986  025F  1814               	btfsc	20,0	;volatile
  1987  0260  2A62               	goto	u651
  1988  0261  2A63               	goto	u650
  1989  0262                     u651:
  1990  0262  2A5C               	goto	l144
  1991  0263                     u650:
  1992  0263                     l1367:
  1993                           
  1994                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 245:     recibo = SSPBUF;
  1995  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0265  0813               	movf	19,w	;volatile
  1998  0266  00F3               	movwf	??_leer_esclavos
  1999  0267  0873               	movf	??_leer_esclavos,w
  2000  0268  00E3               	movwf	_recibo
  2001  0269                     l1369:
  2002                           
  2003                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 248:     PORTCbits.RC0 = 1;
  2004  0269  1407               	bsf	7,0	;volatile
  2005  026A                     l1371:
  2006                           
  2007                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 249:     PORTCbits.RC1 = 1;
  2008  026A  1487               	bsf	7,1	;volatile
  2009  026B                     l1373:
  2010                           
  2011                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 250:     PORTCbits.RC2 = 1;
  2012  026B  1507               	bsf	7,2	;volatile
  2013                           
  2014                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 251:     _delay((unsigned long)((500
      +                          )*(8000000/4000.0)));
  2015  026C  3006               	movlw	6
  2016  026D  00F5               	movwf	??_leer_esclavos+2
  2017  026E  3013               	movlw	19
  2018  026F  00F4               	movwf	??_leer_esclavos+1
  2019  0270  30AD               	movlw	173
  2020  0271  00F3               	movwf	??_leer_esclavos
  2021  0272                     u1037:
  2022  0272  0BF3               	decfsz	??_leer_esclavos,f
  2023  0273  2A72               	goto	u1037
  2024  0274  0BF4               	decfsz	??_leer_esclavos+1,f
  2025  0275  2A72               	goto	u1037
  2026  0276  0BF5               	decfsz	??_leer_esclavos+2,f
  2027  0277  2A72               	goto	u1037
  2028  0278  2A79               	nop2
  2029                           
  2030                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 256:     trash = SSPBUF;
  2031  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2032  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2033  027B  0813               	movf	19,w	;volatile
  2034  027C  00F3               	movwf	??_leer_esclavos
  2035  027D  0873               	movf	??_leer_esclavos,w
  2036  027E  00F8               	movwf	_trash
  2037  027F                     l1375:
  2038                           
  2039                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 257:     PORTCbits.RC0 = 0;
  2040  027F  1007               	bcf	7,0	;volatile
  2041  0280                     l1377:
  2042                           
  2043                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 258:     PORTCbits.RC1 = 1;
  2044  0280  1487               	bsf	7,1	;volatile
  2045  0281                     l1379:
  2046                           
  2047                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 259:     PORTCbits.RC2 = 1;
  2048  0281  1507               	bsf	7,2	;volatile
  2049                           
  2050                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 260:     _delay((unsigned long)((500
      +                          )*(8000000/4000.0)));
  2051  0282  3006               	movlw	6
  2052  0283  00F5               	movwf	??_leer_esclavos+2
  2053  0284  3013               	movlw	19
  2054  0285  00F4               	movwf	??_leer_esclavos+1
  2055  0286  30AD               	movlw	173
  2056  0287  00F3               	movwf	??_leer_esclavos
  2057  0288                     u1047:
  2058  0288  0BF3               	decfsz	??_leer_esclavos,f
  2059  0289  2A88               	goto	u1047
  2060  028A  0BF4               	decfsz	??_leer_esclavos+1,f
  2061  028B  2A88               	goto	u1047
  2062  028C  0BF5               	decfsz	??_leer_esclavos+2,f
  2063  028D  2A88               	goto	u1047
  2064  028E  2A8F               	nop2
  2065                           
  2066                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 261:     SSPBUF = 0x61;
  2067  028F  3061               	movlw	97
  2068  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0292  0093               	movwf	19	;volatile
  2071                           
  2072                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 262:     while (SSPSTATbits.BF==1){
  2073  0293  2A95               	goto	l146
  2074  0294                     l147:
  2075  0294  0000               	nop	;# 
  2076  0295                     l146:	
  2077                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 264:     }
  2078                           
  2079                           
  2080                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 262:     while (SSPSTATbits.BF==1){
  2081  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2083  0297  1814               	btfsc	20,0	;volatile
  2084  0298  2A9A               	goto	u661
  2085  0299  2A9B               	goto	u660
  2086  029A                     u661:
  2087  029A  2A94               	goto	l147
  2088  029B                     u660:
  2089  029B                     l1381:
  2090                           
  2091                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 265:     push = SSPBUF;
  2092  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2093  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2094  029D  0813               	movf	19,w	;volatile
  2095  029E  00F3               	movwf	??_leer_esclavos
  2096  029F  0873               	movf	??_leer_esclavos,w
  2097  02A0  00A0               	movwf	_push
  2098  02A1                     l1383:
  2099                           
  2100                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 268:     PORTCbits.RC0 = 1;
  2101  02A1  1407               	bsf	7,0	;volatile
  2102  02A2                     l1385:
  2103                           
  2104                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 269:     PORTCbits.RC1 = 1;
  2105  02A2  1487               	bsf	7,1	;volatile
  2106  02A3                     l1387:
  2107                           
  2108                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 270:     PORTCbits.RC2 = 1;
  2109  02A3  1507               	bsf	7,2	;volatile
  2110                           
  2111                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 271:     _delay((unsigned long)((99)
      +                          *(8000000/4000.0)));
  2112  02A4  3002               	movlw	2
  2113  02A5  00F5               	movwf	??_leer_esclavos+2
  2114  02A6  3002               	movlw	2
  2115  02A7  00F4               	movwf	??_leer_esclavos+1
  2116  02A8  3021               	movlw	33
  2117  02A9  00F3               	movwf	??_leer_esclavos
  2118  02AA                     u1057:
  2119  02AA  0BF3               	decfsz	??_leer_esclavos,f
  2120  02AB  2AAA               	goto	u1057
  2121  02AC  0BF4               	decfsz	??_leer_esclavos+1,f
  2122  02AD  2AAA               	goto	u1057
  2123  02AE  0BF5               	decfsz	??_leer_esclavos+2,f
  2124  02AF  2AAA               	goto	u1057
  2125  02B0                     l149:
  2126  02B0  0008               	return
  2127  02B1                     __end_of_leer_esclavos:
  2128                           
  2129                           	psect	text7
  2130  052A                     __ptext7:	
  2131 ;; *************** function _Text_Uart *****************
  2132 ;; Defined at:
  2133 ;;		line 277 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  text            1    wreg     PTR unsigned char 
  2136 ;;		 -> h(20), espacio(1), s(20), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  text            1    7[COMMON] PTR unsigned char 
  2139 ;;		 -> h(20), espacio(1), s(20), 
  2140 ;;  i               2    5[COMMON] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         3       0       0       0       0
  2152 ;;      Temps:          2       0       0       0       0
  2153 ;;      Totals:         5       0       0       0       0
  2154 ;;Total ram usage:        5 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _Text_Uart
  2166  052A                     _Text_Uart:
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _Text_Uart: [wreg-fsr0h+status,2+status,0+btemp+1]
  2170                           ;Text_Uart@text stored from wreg
  2171  052A  00F7               	movwf	Text_Uart@text
  2172  052B                     l1443:
  2173                           
  2174                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 277: void Text_Uart(char *text);C:/U
      +                          sers/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 278: {;C:/Users/cabal/MPLABXProjects/MAST
      +                          ER_SPI.X/main.c: 279:   int i;;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 280:  
      +                           for(i=0;i<=3;i++){
  2175  052B  01F5               	clrf	Text_Uart@i
  2176  052C  01F6               	clrf	Text_Uart@i+1
  2177  052D                     l1449:
  2178                           
  2179                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 281:     TXREG = (text[i]);
  2180  052D  0875               	movf	Text_Uart@i,w
  2181  052E  0777               	addwf	Text_Uart@text,w
  2182  052F  00F3               	movwf	??_Text_Uart
  2183  0530  0873               	movf	??_Text_Uart,w
  2184  0531  0084               	movwf	4
  2185  0532  1383               	bcf	3,7	;select IRP bank0
  2186  0533  0800               	movf	0,w
  2187  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0536  0099               	movwf	25	;volatile
  2190  0537                     l1451:
  2191                           
  2192                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 282:   _delay((unsigned long)((10)*(
      +                          8000000/4000.0)));}
  2193  0537  301A               	movlw	26
  2194  0538  00F4               	movwf	??_Text_Uart+1
  2195  0539  30F8               	movlw	248
  2196  053A  00F3               	movwf	??_Text_Uart
  2197  053B                     u1067:
  2198  053B  0BF3               	decfsz	??_Text_Uart,f
  2199  053C  2D3B               	goto	u1067
  2200  053D  0BF4               	decfsz	??_Text_Uart+1,f
  2201  053E  2D3B               	goto	u1067
  2202  053F  0000               	nop
  2203  0540                     l1453:
  2204  0540  3001               	movlw	1
  2205  0541  07F5               	addwf	Text_Uart@i,f
  2206  0542  1803               	skipnc
  2207  0543  0AF6               	incf	Text_Uart@i+1,f
  2208  0544  3000               	movlw	0
  2209  0545  07F6               	addwf	Text_Uart@i+1,f
  2210  0546                     l1455:
  2211  0546  0876               	movf	Text_Uart@i+1,w
  2212  0547  3A80               	xorlw	128
  2213  0548  00FF               	movwf	btemp+1
  2214  0549  3080               	movlw	128
  2215  054A  027F               	subwf	btemp+1,w
  2216  054B  1D03               	skipz
  2217  054C  2D4F               	goto	u725
  2218  054D  3004               	movlw	4
  2219  054E  0275               	subwf	Text_Uart@i,w
  2220  054F                     u725:
  2221  054F  1C03               	skipc
  2222  0550  2D52               	goto	u721
  2223  0551  2D53               	goto	u720
  2224  0552                     u721:
  2225  0552  2D2D               	goto	l1449
  2226  0553                     u720:
  2227  0553                     l154:
  2228  0553  0008               	return
  2229  0554                     __end_of_Text_Uart:
  2230                           
  2231                           	psect	text8
  2232  03B1                     __ptext8:	
  2233 ;; *************** function _Lcd_Write_String *****************
  2234 ;; Defined at:
  2235 ;;		line 97 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  a               2    0[BANK0 ] PTR unsigned char 
  2238 ;;		 -> s(20), STR_1(13), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  i               2    5[BANK0 ] int 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         0       2       0       0       0
  2251 ;;      Locals:         0       2       0       0       0
  2252 ;;      Temps:          0       3       0       0       0
  2253 ;;      Totals:         0       7       0       0       0
  2254 ;;Total ram usage:        7 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		_Lcd_Write_Char
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _Lcd_Write_String
  2266  03B1                     _Lcd_Write_String:
  2267  03B1                     l1595:	
  2268                           ;incstack = 0
  2269                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2270                           
  2271                           
  2272                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 97: void Lcd_Write_String(char *a);C:
      +                          /Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 98: {;C:/Users/cabal/MPLABXProjects/MAST
      +                          ER_SPI.X/lcd.h: 99:  int i;;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 100:  for(
      +                          i=0;a[i]!='\0';i++)
  2273  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2274  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2275  03B3  01CF               	clrf	Lcd_Write_String@i
  2276  03B4  01D0               	clrf	Lcd_Write_String@i+1
  2277  03B5  2BDA               	goto	l1601
  2278  03B6                     l1597:
  2279                           
  2280                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 101:     Lcd_Write_Char(a[i]);
  2281  03B6  084F               	movf	Lcd_Write_String@i,w
  2282  03B7  074A               	addwf	Lcd_Write_String@a,w
  2283  03B8  00CD               	movwf	??_Lcd_Write_String+1
  2284  03B9  084B               	movf	Lcd_Write_String@a+1,w
  2285  03BA  00CC               	movwf	??_Lcd_Write_String
  2286  03BB  1803               	skipnc
  2287  03BC  0ACC               	incf	??_Lcd_Write_String,f
  2288  03BD  1FCF               	btfss	Lcd_Write_String@i,7
  2289  03BE  2BC0               	goto	u880
  2290  03BF  03CC               	decf	??_Lcd_Write_String,f
  2291  03C0                     u880:
  2292  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2293  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2294  03C2  084C               	movf	??_Lcd_Write_String,w
  2295  03C3  00CE               	movwf	??_Lcd_Write_String+2
  2296  03C4  084E               	movf	??_Lcd_Write_String+2,w
  2297  03C5  00FF               	movwf	btemp+1
  2298  03C6  084D               	movf	??_Lcd_Write_String+1,w
  2299  03C7  0084               	movwf	4
  2300  03C8  120A  118A  2500  120A  118A  	fcall	stringtab
  2301  03CD  120A  118A  2472  120A  118A  	fcall	_Lcd_Write_Char
  2302  03D2                     l1599:
  2303  03D2  3001               	movlw	1
  2304  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2305  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2306  03D5  07CF               	addwf	Lcd_Write_String@i,f
  2307  03D6  1803               	skipnc
  2308  03D7  0AD0               	incf	Lcd_Write_String@i+1,f
  2309  03D8  3000               	movlw	0
  2310  03D9  07D0               	addwf	Lcd_Write_String@i+1,f
  2311  03DA                     l1601:
  2312  03DA  084F               	movf	Lcd_Write_String@i,w
  2313  03DB  074A               	addwf	Lcd_Write_String@a,w
  2314  03DC  00CD               	movwf	??_Lcd_Write_String+1
  2315  03DD  084B               	movf	Lcd_Write_String@a+1,w
  2316  03DE  00CC               	movwf	??_Lcd_Write_String
  2317  03DF  1803               	skipnc
  2318  03E0  0ACC               	incf	??_Lcd_Write_String,f
  2319  03E1  1FCF               	btfss	Lcd_Write_String@i,7
  2320  03E2  2BE4               	goto	u890
  2321  03E3  03CC               	decf	??_Lcd_Write_String,f
  2322  03E4                     u890:
  2323  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2324  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2325  03E6  084C               	movf	??_Lcd_Write_String,w
  2326  03E7  00CE               	movwf	??_Lcd_Write_String+2
  2327  03E8  084E               	movf	??_Lcd_Write_String+2,w
  2328  03E9  00FF               	movwf	btemp+1
  2329  03EA  084D               	movf	??_Lcd_Write_String+1,w
  2330  03EB  0084               	movwf	4
  2331  03EC  120A  118A  2500  120A  118A  	fcall	stringtab
  2332  03F1  3A00               	xorlw	0
  2333  03F2  1D03               	skipz
  2334  03F3  2BF5               	goto	u901
  2335  03F4  2BF6               	goto	u900
  2336  03F5                     u901:
  2337  03F5  2BB6               	goto	l1597
  2338  03F6                     u900:
  2339  03F6                     l93:
  2340  03F6  0008               	return
  2341  03F7                     __end_of_Lcd_Write_String:
  2342                           
  2343                           	psect	text9
  2344  0472                     __ptext9:	
  2345 ;; *************** function _Lcd_Write_Char *****************
  2346 ;; Defined at:
  2347 ;;		line 81 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  a               1    wreg     unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  a               1    7[COMMON] unsigned char 
  2352 ;;  y               1    6[COMMON] unsigned char 
  2353 ;;  temp            1    5[COMMON] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         3       0       0       0       0
  2365 ;;      Temps:          1       0       0       0       0
  2366 ;;      Totals:         4       0       0       0       0
  2367 ;;Total ram usage:        4 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    2
  2370 ;; This function calls:
  2371 ;;		_Lcd_Port
  2372 ;; This function is called by:
  2373 ;;		_Lcd_Write_String
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _Lcd_Write_Char
  2379  0472                     _Lcd_Write_Char:
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2383                           ;Lcd_Write_Char@a stored from wreg
  2384  0472  00F7               	movwf	Lcd_Write_Char@a
  2385  0473                     l1185:
  2386                           
  2387                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 81: void Lcd_Write_Char(char a);C:/Us
      +                          ers/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 82: {;C:/Users/cabal/MPLABXProjects/MASTER_
      +                          SPI.X/lcd.h: 83:    char temp,y;;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 84:  
      +                            temp = a&0x0F;
  2388  0473  0877               	movf	Lcd_Write_Char@a,w
  2389  0474  390F               	andlw	15
  2390  0475  00F4               	movwf	??_Lcd_Write_Char
  2391  0476  0874               	movf	??_Lcd_Write_Char,w
  2392  0477  00F5               	movwf	Lcd_Write_Char@temp
  2393                           
  2394                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 85:    y = a&0xF0;
  2395  0478  0877               	movf	Lcd_Write_Char@a,w
  2396  0479  39F0               	andlw	240
  2397  047A  00F4               	movwf	??_Lcd_Write_Char
  2398  047B  0874               	movf	??_Lcd_Write_Char,w
  2399  047C  00F6               	movwf	Lcd_Write_Char@y
  2400  047D                     l1187:
  2401                           
  2402                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 86:    RD2 = 1;
  2403  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2404  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2405  047F  1508               	bsf	8,2	;volatile
  2406  0480                     l1189:
  2407                           
  2408                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 87:    Lcd_Port(y>>4);
  2409  0480  0876               	movf	Lcd_Write_Char@y,w
  2410  0481  00F4               	movwf	??_Lcd_Write_Char
  2411  0482  3004               	movlw	4
  2412  0483                     u435:
  2413  0483  1003               	clrc
  2414  0484  0CF4               	rrf	??_Lcd_Write_Char,f
  2415  0485  3EFF               	addlw	-1
  2416  0486  1D03               	skipz
  2417  0487  2C83               	goto	u435
  2418  0488  0874               	movf	??_Lcd_Write_Char,w
  2419  0489  120A  118A  2554  120A  118A  	fcall	_Lcd_Port
  2420  048E                     l1191:
  2421                           
  2422                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 88:    RD3 = 1;
  2423  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2424  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0490  1588               	bsf	8,3	;volatile
  2426  0491                     l1193:
  2427                           
  2428                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 89:    _delay((unsigned long)((40)*(8
      +                          000000/4000000.0)));
  2429  0491  301A               	movlw	26
  2430  0492  00F4               	movwf	??_Lcd_Write_Char
  2431  0493                     u1077:
  2432  0493  0BF4               	decfsz	??_Lcd_Write_Char,f
  2433  0494  2C93               	goto	u1077
  2434  0495  0000               	nop
  2435  0496                     l1195:
  2436                           
  2437                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 90:    RD3 = 0;
  2438  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0498  1188               	bcf	8,3	;volatile
  2441  0499                     l1197:
  2442                           
  2443                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 91:    Lcd_Port(temp);
  2444  0499  0875               	movf	Lcd_Write_Char@temp,w
  2445  049A  120A  118A  2554  120A  118A  	fcall	_Lcd_Port
  2446  049F                     l1199:
  2447                           
  2448                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 92:    RD3 = 1;
  2449  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2450  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2451  04A1  1588               	bsf	8,3	;volatile
  2452  04A2                     l1201:
  2453                           
  2454                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 93:    _delay((unsigned long)((40)*(8
      +                          000000/4000000.0)));
  2455  04A2  301A               	movlw	26
  2456  04A3  00F4               	movwf	??_Lcd_Write_Char
  2457  04A4                     u1087:
  2458  04A4  0BF4               	decfsz	??_Lcd_Write_Char,f
  2459  04A5  2CA4               	goto	u1087
  2460  04A6  0000               	nop
  2461  04A7                     l1203:
  2462                           
  2463                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 94:    RD3 = 0;
  2464  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2465  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2466  04A9  1188               	bcf	8,3	;volatile
  2467  04AA                     l87:
  2468  04AA  0008               	return
  2469  04AB                     __end_of_Lcd_Write_Char:
  2470                           
  2471                           	psect	text10
  2472  0313                     __ptext10:	
  2473 ;; *************** function _Lcd_Set_Cursor *****************
  2474 ;; Defined at:
  2475 ;;		line 41 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  a               1    wreg     unsigned char 
  2478 ;;  b               1    7[COMMON] unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  a               1    2[BANK0 ] unsigned char 
  2481 ;;  temp            1    5[BANK0 ] unsigned char 
  2482 ;;  y               1    4[BANK0 ] unsigned char 
  2483 ;;  z               1    3[BANK0 ] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         1       0       0       0       0
  2494 ;;      Locals:         0       4       0       0       0
  2495 ;;      Temps:          0       2       0       0       0
  2496 ;;      Totals:         1       6       0       0       0
  2497 ;;Total ram usage:        7 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    3
  2500 ;; This function calls:
  2501 ;;		_Lcd_Cmd
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _Lcd_Set_Cursor
  2509  0313                     _Lcd_Set_Cursor:
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2513                           ;Lcd_Set_Cursor@a stored from wreg
  2514  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0315  00CC               	movwf	Lcd_Set_Cursor@a
  2517  0316                     l1575:
  2518                           
  2519                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 41: void Lcd_Set_Cursor(char a, char 
      +                          b);C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 42: {;C:/Users/cabal/MPLABXProjects
      +                          /MASTER_SPI.X/lcd.h: 43:  char temp,z,y;;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.
      +                          h: 44:  if(a == 1)
  2520  0316  034C               	decf	Lcd_Set_Cursor@a,w
  2521  0317  1D03               	btfss	3,2
  2522  0318  2B1A               	goto	u841
  2523  0319  2B1B               	goto	u840
  2524  031A                     u841:
  2525  031A  2B40               	goto	l1585
  2526  031B                     u840:
  2527  031B                     l1577:
  2528                           
  2529                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 45:  {;C:/Users/cabal/MPLABXProjects/
      +                          MASTER_SPI.X/lcd.h: 46:    temp = 0x80 + b - 1;
  2530  031B  0877               	movf	Lcd_Set_Cursor@b,w
  2531  031C  3E7F               	addlw	127
  2532  031D  00CA               	movwf	??_Lcd_Set_Cursor
  2533  031E  084A               	movf	??_Lcd_Set_Cursor,w
  2534  031F  00CF               	movwf	Lcd_Set_Cursor@temp
  2535                           
  2536                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 47:   z = temp>>4;
  2537  0320  084F               	movf	Lcd_Set_Cursor@temp,w
  2538  0321  00CA               	movwf	??_Lcd_Set_Cursor
  2539  0322  3004               	movlw	4
  2540  0323                     u855:
  2541  0323  1003               	clrc
  2542  0324  0CCA               	rrf	??_Lcd_Set_Cursor,f
  2543  0325  3EFF               	addlw	-1
  2544  0326  1D03               	skipz
  2545  0327  2B23               	goto	u855
  2546  0328  084A               	movf	??_Lcd_Set_Cursor,w
  2547  0329  00CB               	movwf	??_Lcd_Set_Cursor+1
  2548  032A  084B               	movf	??_Lcd_Set_Cursor+1,w
  2549  032B  00CD               	movwf	Lcd_Set_Cursor@z
  2550  032C                     l1579:
  2551                           
  2552                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 48:   y = temp & 0x0F;
  2553  032C  084F               	movf	Lcd_Set_Cursor@temp,w
  2554  032D  390F               	andlw	15
  2555  032E  00CA               	movwf	??_Lcd_Set_Cursor
  2556  032F  084A               	movf	??_Lcd_Set_Cursor,w
  2557  0330  00CE               	movwf	Lcd_Set_Cursor@y
  2558  0331                     l1581:
  2559                           
  2560                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 49:   Lcd_Cmd(z);
  2561  0331  084D               	movf	Lcd_Set_Cursor@z,w
  2562  0332  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  2563  0337                     l1583:
  2564                           
  2565                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 50:   Lcd_Cmd(y);
  2566  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0339  084E               	movf	Lcd_Set_Cursor@y,w
  2569  033A  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  2570                           
  2571                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 51:  }
  2572  033F  2B6A               	goto	l81
  2573  0340                     l1585:
  2574  0340  3002               	movlw	2
  2575  0341  064C               	xorwf	Lcd_Set_Cursor@a,w
  2576  0342  1D03               	btfss	3,2
  2577  0343  2B45               	goto	u861
  2578  0344  2B46               	goto	u860
  2579  0345                     u861:
  2580  0345  2B6A               	goto	l81
  2581  0346                     u860:
  2582  0346                     l1587:
  2583                           
  2584                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 53:  {;C:/Users/cabal/MPLABXProjects/
      +                          MASTER_SPI.X/lcd.h: 54:   temp = 0xC0 + b - 1;
  2585  0346  0877               	movf	Lcd_Set_Cursor@b,w
  2586  0347  3EBF               	addlw	191
  2587  0348  00CA               	movwf	??_Lcd_Set_Cursor
  2588  0349  084A               	movf	??_Lcd_Set_Cursor,w
  2589  034A  00CF               	movwf	Lcd_Set_Cursor@temp
  2590                           
  2591                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 55:   z = temp>>4;
  2592  034B  084F               	movf	Lcd_Set_Cursor@temp,w
  2593  034C  00CA               	movwf	??_Lcd_Set_Cursor
  2594  034D  3004               	movlw	4
  2595  034E                     u875:
  2596  034E  1003               	clrc
  2597  034F  0CCA               	rrf	??_Lcd_Set_Cursor,f
  2598  0350  3EFF               	addlw	-1
  2599  0351  1D03               	skipz
  2600  0352  2B4E               	goto	u875
  2601  0353  084A               	movf	??_Lcd_Set_Cursor,w
  2602  0354  00CB               	movwf	??_Lcd_Set_Cursor+1
  2603  0355  084B               	movf	??_Lcd_Set_Cursor+1,w
  2604  0356  00CD               	movwf	Lcd_Set_Cursor@z
  2605  0357                     l1589:
  2606                           
  2607                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 56:   y = temp & 0x0F;
  2608  0357  084F               	movf	Lcd_Set_Cursor@temp,w
  2609  0358  390F               	andlw	15
  2610  0359  00CA               	movwf	??_Lcd_Set_Cursor
  2611  035A  084A               	movf	??_Lcd_Set_Cursor,w
  2612  035B  00CE               	movwf	Lcd_Set_Cursor@y
  2613  035C                     l1591:
  2614                           
  2615                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 57:   Lcd_Cmd(z);
  2616  035C  084D               	movf	Lcd_Set_Cursor@z,w
  2617  035D  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  2618  0362                     l1593:
  2619                           
  2620                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 58:   Lcd_Cmd(y);
  2621  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0364  084E               	movf	Lcd_Set_Cursor@y,w
  2624  0365  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  2625  036A                     l81:
  2626  036A  0008               	return
  2627  036B                     __end_of_Lcd_Set_Cursor:
  2628                           
  2629                           	psect	text11
  2630  0590                     __ptext11:	
  2631 ;; *************** function _Lcd_Clear *****************
  2632 ;; Defined at:
  2633 ;;		line 35 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0, pclath, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0
  2650 ;;      Totals:         0       0       0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    3
  2654 ;; This function calls:
  2655 ;;		_Lcd_Cmd
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _Lcd_Clear
  2663  0590                     _Lcd_Clear:
  2664  0590                     l1253:	
  2665                           ;incstack = 0
  2666                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2667                           
  2668                           
  2669                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 37:  Lcd_Cmd(0);
  2670  0590  3000               	movlw	0
  2671  0591  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  2672                           
  2673                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 38:  Lcd_Cmd(1);
  2674  0596  3001               	movlw	1
  2675  0597  120A  118A  2576  120A  118A  	fcall	_Lcd_Cmd
  2676  059C                     l75:
  2677  059C  0008               	return
  2678  059D                     __end_of_Lcd_Clear:
  2679                           
  2680                           	psect	text12
  2681  0576                     __ptext12:	
  2682 ;; *************** function _Lcd_Cmd *****************
  2683 ;; Defined at:
  2684 ;;		line 26 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  a               1    wreg     unsigned char 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  a               1    6[COMMON] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         1       0       0       0       0
  2700 ;;      Temps:          2       0       0       0       0
  2701 ;;      Totals:         3       0       0       0       0
  2702 ;;Total ram usage:        3 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    2
  2705 ;; This function calls:
  2706 ;;		_Lcd_Port
  2707 ;; This function is called by:
  2708 ;;		_Lcd_Clear
  2709 ;;		_Lcd_Set_Cursor
  2710 ;;		_Lcd_Init
  2711 ;;		_Lcd_Shift_Right
  2712 ;;		_Lcd_Shift_Left
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _Lcd_Cmd
  2718  0576                     _Lcd_Cmd:
  2719                           
  2720                           ;incstack = 0
  2721                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2722                           ;Lcd_Cmd@a stored from wreg
  2723  0576  00F6               	movwf	Lcd_Cmd@a
  2724  0577                     l1165:
  2725                           
  2726                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 26: void Lcd_Cmd(char a);C:/Users/cab
      +                          al/MPLABXProjects/MASTER_SPI.X/lcd.h: 27: {;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/l
      +                          cd.h: 28:  RD2 = 0;
  2727  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0579  1108               	bcf	8,2	;volatile
  2730  057A                     l1167:
  2731                           
  2732                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 29:  Lcd_Port(a);
  2733  057A  0876               	movf	Lcd_Cmd@a,w
  2734  057B  120A  118A  2554  120A  118A  	fcall	_Lcd_Port
  2735  0580                     l1169:
  2736                           
  2737                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 30:  RD3 = 1;
  2738  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0582  1588               	bsf	8,3	;volatile
  2741  0583                     l1171:
  2742                           
  2743                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 31:         _delay((unsigned long)((4
      +                          )*(8000000/4000.0)));
  2744  0583  300B               	movlw	11
  2745  0584  00F5               	movwf	??_Lcd_Cmd+1
  2746  0585  3062               	movlw	98
  2747  0586  00F4               	movwf	??_Lcd_Cmd
  2748  0587                     u1097:
  2749  0587  0BF4               	decfsz	??_Lcd_Cmd,f
  2750  0588  2D87               	goto	u1097
  2751  0589  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2752  058A  2D87               	goto	u1097
  2753  058B  0000               	nop
  2754  058C                     l1173:
  2755                           
  2756                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 32:         RD3 = 0;
  2757  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2758  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2759  058E  1188               	bcf	8,3	;volatile
  2760  058F                     l72:
  2761  058F  0008               	return
  2762  0590                     __end_of_Lcd_Cmd:
  2763                           
  2764                           	psect	text13
  2765  0554                     __ptext13:	
  2766 ;; *************** function _Lcd_Port *****************
  2767 ;; Defined at:
  2768 ;;		line 4 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  a               1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  a               1    3[COMMON] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_Lcd_Cmd
  2793 ;;		_Lcd_Init
  2794 ;;		_Lcd_Write_Char
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _Lcd_Port
  2800  0554                     _Lcd_Port:
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _Lcd_Port: [wreg]
  2804                           ;Lcd_Port@a stored from wreg
  2805  0554  00F3               	movwf	Lcd_Port@a
  2806  0555                     l1155:
  2807                           
  2808                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 4: void Lcd_Port(char a);C:/Users/cab
      +                          al/MPLABXProjects/MASTER_SPI.X/lcd.h: 5: {;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lc
      +                          d.h: 6:  if(a & 1)
  2809  0555  1C73               	btfss	Lcd_Port@a,0
  2810  0556  2D58               	goto	u391
  2811  0557  2D59               	goto	u390
  2812  0558                     u391:
  2813  0558  2D5D               	goto	l61
  2814  0559                     u390:
  2815  0559                     l1157:
  2816                           
  2817                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 7:   RD4 = 1;
  2818  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2819  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2820  055B  1608               	bsf	8,4	;volatile
  2821  055C  2D60               	goto	l62
  2822  055D                     l61:	
  2823                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 8:  else
  2824                           
  2825                           
  2826                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 9:   RD4 = 0;
  2827  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2828  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2829  055F  1208               	bcf	8,4	;volatile
  2830  0560                     l62:
  2831                           
  2832                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 11:  if(a & 2)
  2833  0560  1CF3               	btfss	Lcd_Port@a,1
  2834  0561  2D63               	goto	u401
  2835  0562  2D64               	goto	u400
  2836  0563                     u401:
  2837  0563  2D66               	goto	l63
  2838  0564                     u400:
  2839  0564                     l1159:
  2840                           
  2841                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 12:   RD5 = 1;
  2842  0564  1688               	bsf	8,5	;volatile
  2843  0565  2D67               	goto	l64
  2844  0566                     l63:	
  2845                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 13:  else
  2846                           
  2847                           
  2848                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 14:   RD5 = 0;
  2849  0566  1288               	bcf	8,5	;volatile
  2850  0567                     l64:
  2851                           
  2852                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 16:  if(a & 4)
  2853  0567  1D73               	btfss	Lcd_Port@a,2
  2854  0568  2D6A               	goto	u411
  2855  0569  2D6B               	goto	u410
  2856  056A                     u411:
  2857  056A  2D6D               	goto	l65
  2858  056B                     u410:
  2859  056B                     l1161:
  2860                           
  2861                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 17:   RD6 = 1;
  2862  056B  1708               	bsf	8,6	;volatile
  2863  056C  2D6E               	goto	l66
  2864  056D                     l65:	
  2865                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 18:  else
  2866                           
  2867                           
  2868                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 19:   RD6 = 0;
  2869  056D  1308               	bcf	8,6	;volatile
  2870  056E                     l66:
  2871                           
  2872                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 21:  if(a & 8)
  2873  056E  1DF3               	btfss	Lcd_Port@a,3
  2874  056F  2D71               	goto	u421
  2875  0570  2D72               	goto	u420
  2876  0571                     u421:
  2877  0571  2D74               	goto	l67
  2878  0572                     u420:
  2879  0572                     l1163:
  2880                           
  2881                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 22:   RD7 = 1;
  2882  0572  1788               	bsf	8,7	;volatile
  2883  0573  2D75               	goto	l69
  2884  0574                     l67:	
  2885                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 23:  else
  2886                           
  2887                           
  2888                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/lcd.h: 24:   RD7 = 0;
  2889  0574  1388               	bcf	8,7	;volatile
  2890  0575                     l69:
  2891  0575  0008               	return
  2892  0576                     __end_of_Lcd_Port:
  2893                           
  2894                           	psect	text14
  2895  04AB                     __ptext14:	
  2896 ;; *************** function _ISR *****************
  2897 ;; Defined at:
  2898 ;;		line 63 in file "C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2912 ;;      Params:         0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0
  2914 ;;      Temps:          3       0       0       0       0
  2915 ;;      Totals:         3       0       0       0       0
  2916 ;;Total ram usage:        3 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		Interrupt level 1
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _ISR
  2927  04AB                     _ISR:
  2928  04AB                     i1l1461:
  2929                           
  2930                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 65:     if (PIR1bits.SSPIF==1){
  2931  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2932  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2933  04AD  1D8C               	btfss	12,3	;volatile
  2934  04AE  2CB0               	goto	u73_21
  2935  04AF  2CB1               	goto	u73_20
  2936  04B0                     u73_21:
  2937  04B0  2CD0               	goto	i1l126
  2938  04B1                     u73_20:
  2939  04B1                     i1l1463:
  2940                           
  2941                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 66:         if (slave==0){
  2942  04B1  087A               	movf	_slave,w
  2943  04B2  1D03               	btfss	3,2
  2944  04B3  2CB5               	goto	u74_21
  2945  04B4  2CB6               	goto	u74_20
  2946  04B5                     u74_21:
  2947  04B5  2CBB               	goto	i1l1469
  2948  04B6                     u74_20:
  2949  04B6                     i1l1465:
  2950                           
  2951                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 67:             temp = SSPBUF;
  2952  04B6  0813               	movf	19,w	;volatile
  2953  04B7  00F0               	movwf	??_ISR
  2954  04B8  0870               	movf	??_ISR,w
  2955  04B9  00A1               	movwf	_temp
  2956  04BA                     i1l1467:
  2957                           
  2958                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 68:             PIR1bits.SSPIF = 0;
  2959  04BA  118C               	bcf	12,3	;volatile
  2960  04BB                     i1l1469:
  2961                           
  2962                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 71:         if (slave==1){
  2963  04BB  037A               	decf	_slave,w
  2964  04BC  1D03               	btfss	3,2
  2965  04BD  2CBF               	goto	u75_21
  2966  04BE  2CC0               	goto	u75_20
  2967  04BF                     u75_21:
  2968  04BF  2CC5               	goto	i1l1475
  2969  04C0                     u75_20:
  2970  04C0                     i1l1471:
  2971                           
  2972                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 72:             recibo = SSPBUF;
  2973  04C0  0813               	movf	19,w	;volatile
  2974  04C1  00F0               	movwf	??_ISR
  2975  04C2  0870               	movf	??_ISR,w
  2976  04C3  00E3               	movwf	_recibo
  2977  04C4                     i1l1473:
  2978                           
  2979                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 73:             PIR1bits.SSPIF = 0;
  2980  04C4  118C               	bcf	12,3	;volatile
  2981  04C5                     i1l1475:
  2982                           
  2983                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 76:         if (slave==2){
  2984  04C5  3002               	movlw	2
  2985  04C6  067A               	xorwf	_slave,w
  2986  04C7  1D03               	btfss	3,2
  2987  04C8  2CCA               	goto	u76_21
  2988  04C9  2CCB               	goto	u76_20
  2989  04CA                     u76_21:
  2990  04CA  2CD0               	goto	i1l126
  2991  04CB                     u76_20:
  2992  04CB                     i1l1477:
  2993                           
  2994                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 77:             push = SSPBUF;
  2995  04CB  0813               	movf	19,w	;volatile
  2996  04CC  00F0               	movwf	??_ISR
  2997  04CD  0870               	movf	??_ISR,w
  2998  04CE  00A0               	movwf	_push
  2999  04CF                     i1l1479:
  3000                           
  3001                           ;C:/Users/cabal/MPLABXProjects/MASTER_SPI.X/main.c: 78:             PIR1bits.SSPIF = 0;
  3002  04CF  118C               	bcf	12,3	;volatile
  3003  04D0                     i1l126:
  3004  04D0  0872               	movf	??_ISR+2,w
  3005  04D1  008A               	movwf	10
  3006  04D2  0E71               	swapf	??_ISR+1,w
  3007  04D3  0083               	movwf	3
  3008  04D4  0EFE               	swapf	btemp,f
  3009  04D5  0E7E               	swapf	btemp,w
  3010  04D6  0009               	retfie
  3011  04D7                     __end_of_ISR:
  3012  007E                     btemp	set	126	;btemp
  3013  007E                     wtemp0	set	126
  3014                           
  3015                           	psect	intentry
  3016  0004                     __pintentry:	
  3017                           ;incstack = 0
  3018                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3019                           
  3020  0004                     interrupt_function:
  3021  007E                     saved_w	set	btemp
  3022  0004  00FE               	movwf	btemp
  3023  0005  0E03               	swapf	3,w
  3024  0006  00F1               	movwf	??_ISR+1
  3025  0007  080A               	movf	10,w
  3026  0008  00F2               	movwf	??_ISR+2
  3027  0009  120A  118A  2CAB   	ljmp	_ISR
  3028                           
  3029                           	psect	config
  3030                           
  3031                           ;Config register CONFIG1 @ 0x2007
  3032                           ;	Oscillator Selection bits
  3033                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3034                           ;	Watchdog Timer Enable bit
  3035                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3036                           ;	Power-up Timer Enable bit
  3037                           ;	PWRTE = OFF, PWRT disabled
  3038                           ;	RE3/MCLR pin function select bit
  3039                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3040                           ;	Code Protection bit
  3041                           ;	CP = OFF, Program memory code protection is disabled
  3042                           ;	Data Code Protection bit
  3043                           ;	CPD = OFF, Data memory code protection is disabled
  3044                           ;	Brown Out Reset Selection bits
  3045                           ;	BOREN = OFF, BOR disabled
  3046                           ;	Internal External Switchover bit
  3047                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3048                           ;	Fail-Safe Clock Monitor Enabled bit
  3049                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3050                           ;	Low Voltage Programming Enable bit
  3051                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3052                           ;	In-Circuit Debugger Mode bit
  3053                           ;	DEBUG = 0x1, unprogrammed default
  3054  2007                     	org	8199
  3055  2007  20D4               	dw	8404
  3056                           
  3057                           ;Config register CONFIG2 @ 0x2008
  3058                           ;	Brown-out Reset Selection bit
  3059                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3060                           ;	Flash Program Memory Self Write Enable bits
  3061                           ;	WRT = OFF, Write protection off
  3062  2008                     	org	8200
  3063  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    10
    Data        2
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> h(BANK0[20]), s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Text_Uart@text	PTR unsigned char  size(1) Largest target is 20
		 -> h(BANK0[20]), espacio(BANK0[1]), s(BANK0[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK0[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Text_Uart
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4178
                                             22 BANK0      3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Text_Uart
                      _leer_esclavos
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2054
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     198
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _leer_esclavos                                        3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Text_Uart                                            5     5      0     288
                                              3 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     668
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     860
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Text_Uart
   _leer_esclavos
   _setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      50      12        0.0%
ABS                  0      0      50       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 09:30:00 2021

                        _h 0022                          _s 0036                          pc 0002  
              _SSPSTATbits 0094                         l61 055D                         l62 0560  
                       l63 0566                         l64 0567                         l72 058F  
                       l65 056D                         l81 036A                         l66 056E  
                       l67 0574                         l75 059C                         l84 0312  
                       l69 0575                         l93 03F6                         l87 04AA  
                       fsr 0004     __size_of_leer_esclavos 00B5                        l140 0226  
                      l141 0225                        l134 0030                        l143 025D  
                      l144 025C                        l129 0435                        l154 0553  
                      l146 0295                        l147 0294                        l149 02B0  
                      l261 01FB                        l537 03B0                        l547 0471  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u400 0564                        u401 0563                        u410 056B  
                      u411 056A                        u420 0572                        u421 0571  
                      u510 043E                        u511 043D                        u530 0450  
                      u435 0483                        u531 044F                        u540 045A  
                      _ISR 04AB                        u541 0459                        u525 0442  
                      u390 0559                        u391 0558                        u720 0553  
                      u640 022C                        u560 046D                        u721 0552  
                      u641 022B                        u561 046C                        u545 0456  
                      u650 0263                        u810 0398                        u651 0262  
                      u811 0397                        u555 0461                        u900 03F6  
                      u660 029B                        u901 03F5                        u725 054F  
                      u661 029A                        u805 0388                        u830 03AC  
                      u910 013B                        u831 03AB                        u815 0394  
                      u911 013A                        u840 031B                        u920 0191  
                      u841 031A                        u825 03A0                        u921 0190  
                      u770 0375                        u930 019C                        u771 0374  
                      u931 019B                        u860 0346                        u940 01E5  
                      u861 0345                        u941 01E4                        u925 018D  
                      u790 0387                        u950 01F7                        u855 0323  
                      u791 0386                        u951 01F6                        u880 03C0  
                      u785 0379                        u890 03E4                        u875 034E  
                      u967 02BD                        u977 02CD                        u987 02DD  
                      u997 0205                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l1201 04A2                       l1203 04A7  
                     l1231 0436                       l1161 056B                       l1241 0450  
                     l1233 043E                       l1163 0572                       l1155 0555  
                     l1171 0583                       l1243 045A                       l1235 0441  
                     l1157 0559                       l1173 058C                       l1165 0577  
                     l1253 0590                       l1245 0460                       l1237 0448  
                     l1159 0564                       l1167 057A                       l1191 048E  
                     l1351 0212                       l1343 01FC                       l1247 0467  
                     l1239 044C                       l1169 0580                       l1193 0491  
                     l1185 0473                       l1601 03DA                       l1361 0247  
                     l1353 022C                       l1345 0201                       l1249 046D  
                     l1195 0496                       l1187 047D                       l1451 0537  
                     l1443 052B                       l1371 026A                       l1363 0248  
                     l1355 0232                       l1347 0210                       l1611 0401  
                     l1603 03F7                       l1197 0499                       l1189 0480  
                     l1453 0540                       l1381 029B                       l1373 026B  
                     l1365 0249                       l1357 0233                       l1349 0211  
                     l1541 02B7                       l1621 0408                       l1613 0402  
                     l1605 03FC                       l1701 01D8                       l1199 049F  
                     l1455 0546                       l1383 02A1                       l1375 027F  
                     l1367 0263                       l1359 0234                       l1543 02C1  
                     l1631 0410                       l1623 0409                       l1615 0403  
                     l1607 03FE                       l1551 036F                       l1703 01DC  
                     l1449 052D                       l1385 02A2                       l1377 0280  
                     l1369 0269                       l1545 02D1                       l1641 041A  
                     l1633 0414                       l1625 040C                       l1617 0404  
                     l1609 0400                       l1561 0387                       l1553 0375  
                     l1705 01E5                       l1721 0073                       l1387 02A3  
                     l1379 0281                       l1547 02D7                       l1539 02B1  
                     l1651 0429                       l1643 041D                       l1635 0415  
                     l1627 040D                       l1619 0407                       l1563 0398  
                     l1555 0378                       l1571 03AC                       l1707 01F7  
                     l1731 00AE                       l1723 007F                       l1715 002B  
                     l1581 0331                       l1653 042C                       l1645 0422  
                     l1637 0416                       l1629 040E                       l1565 039E  
                     l1557 037F                       l1549 036B                       l1741 00EB  
                     l1733 00C1                       l1725 0086                       l1717 0042  
                     l1591 035C                       l1583 0337                       l1575 0316  
                     l1655 042D                       l1647 0425                       l1639 0417  
                     l1567 039F                       l1559 0383                       l1671 0147  
                     l1663 0130                       l1751 0123                       l1743 00FE  
                     l1735 00CC                       l1727 0097                       l1719 004D  
                     l1593 0362                       l1577 031B                       l1585 0340  
                     l1657 0430                       l1649 0426                       l1569 03A6  
                     l1681 0170                       l1673 0149                       l1665 0135  
                     l1745 0104                       l1737 00DF                       l1729 00A2  
                     l1587 0346                       l1579 032C                       l1595 03B1  
                     l1659 0434                       l1683 0174                       l1667 013B  
                     l1747 010A                       l1739 00E5                       l1589 0357  
                     l1597 03B6                       l1693 0192                       l1773 0160  
                     l1677 014E                       l1669 0142                       l1749 011D  
                     l1599 03D2                       l1695 019C                       l1679 0168  
                     l1697 01A1                       l1689 0176                       l1699 01D1  
                     STR_1 051A                       STR_2 0527                       STR_3 0527  
                     STR_4 0527                       STR_5 0527                       STR_6 0527  
                     STR_7 0527                       u1007 0219                       u1017 023B  
                     u1027 0250                       u1037 0272                       u1047 0288  
                     u1057 02AA                       u1067 053B                       u1077 0493  
                     u1087 04A4                       u1097 0587          ?_Lcd_Write_String 004A  
                     _main 002B                       _temp 0021                       _push 0020  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 004C  
          __end_of_Lcd_Cmd 0590                      ??_ISR 0070                      ?_main 0070  
          __end_of___lwdiv 03B1                      i1l126 04D0            __end_of___lwmod 0472  
                    _SPBRG 0099                      u73_20 04B1                      u73_21 04B0  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      u74_20 04B6                      u74_21 04B5  
                    u75_20 04C0                      u75_21 04BF                      u76_20 04CB  
                    u76_21 04CA                      _TXREG 0019            __end_of_dpowers 051A  
                    _slave 007A                      _push2 0079                      _setup 03F7  
                    _trash 0078                      pclath 000A              _leer_esclavos 01FC  
                    status 0003                      wtemp0 007E            __end_of_sprintf 01FC  
         __end_of_Lcd_Init 0313           __end_of_Lcd_Port 0576            __initialization 000F  
             __end_of_main 012D                     ??_main 0060         __size_of_Lcd_Clear 000D  
                   ?_setup 0070                     i1l1461 04AB                     i1l1471 04C0  
                   i1l1463 04B1                     i1l1473 04C4                     i1l1465 04B6  
                   i1l1475 04C5                     i1l1467 04BA                     i1l1477 04CB  
                   i1l1469 04BB                     i1l1479 04CF             ?_leer_esclavos 0070  
                   _OSCCON 008F                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0039  
                   _SSPBUF 0013                     _SSPCON 0014                  ??___lwdiv 0077  
                ??___lwmod 0051                     _recibo 0063                 Text_Uart@i 0075  
       __size_of_Text_Uart 002A                     saved_w 007E                  ??_sprintf 0056  
          Lcd_Set_Cursor@a 004C            Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 004E  
          Lcd_Set_Cursor@z 004D    __end_of__initialization 0027          __end_of_Lcd_Clear 059D  
           __pcstackCOMMON 0070               __pidataBANK0 05A5              __end_of_setup 0436  
           _Lcd_Set_Cursor 0313                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          ??_leer_esclavos 0073                    ??_setup 0077                 __pbssBANK0 0020  
        __end_of_Text_Uart 0554                 __pmaintext 002B                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 036B                 ??_Lcd_Init 004A  
               ??_Lcd_Port 0073                    _SSPSTAT 0094                 __stringtab 0500  
           _Lcd_Write_Char 0472                    _Lcd_Cmd 0576                    ___lwdiv 036B  
                  ___lwmod 0436            ?_Lcd_Set_Cursor 0077                    __ptext1 012D  
                  __ptext2 0436                    __ptext3 036B                    __ptext4 03F7  
                  __ptext5 02B1                    __ptext6 01FC                    __ptext7 052A  
                  __ptext8 03B1                    __ptext9 0472               __size_of_ISR 002C  
                  _espacio 0064                    _dpowers 0510                    _sprintf 012D  
                  clrloop0 059E     __end_of_Lcd_Write_Char 04AB       end_of_initialization 0027  
                _RCSTAbits 0018                  Lcd_Port@a 0073                  _PORTCbits 0007  
                _TRISAbits 0085                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 004A          Lcd_Write_String@i 004F                  _TXSTAbits 0098  
                _Lcd_Clear 0590           _Lcd_Write_String 03B1                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_ISR 04D7          __size_of_Lcd_Init 0062  
        __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070                __pdataBANK0 0063  
                _Text_Uart 052A            Lcd_Write_Char@a 0077            Lcd_Write_Char@y 0076  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 004A  
    __end_of_leer_esclavos 02B1                   ?_Lcd_Cmd 0070                sprintf@flag 0059  
              sprintf@prec 005D           ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 004A  
                 ?___lwdiv 0073                   ?___lwmod 004D                 ?_Text_Uart 0070  
                __pstrings 0500           ___lwdiv@quotient 004B                   ?_sprintf 0053  
           __size_of_setup 003F          interrupt_function 0004                  clear_ram0 059D  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
              ??_Lcd_Clear 0077                __stringbase 050F           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 02B1                   _Lcd_Port 0554   __end_of_Lcd_Write_String 03F7  
         __size_of_Lcd_Cmd 001A                ??_Text_Uart 0073           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0510                 sprintf@val 005B  
          ___lwdiv@divisor 0073            ___lwdiv@counter 004A                   __ptext10 0313  
                 __ptext11 0590                   __ptext12 0576                   __ptext13 0554  
                 __ptext14 04AB              Text_Uart@text 0077           __size_of_sprintf 00CF  
            __size_of_main 0102                 _INTCONbits 000B         Lcd_Write_Char@temp 0075  
                 intlevel1 0000                  sprintf@ap 005A                  sprintf@sp 005E  
         ___lwmod@dividend 004F                  stringcode 050A         Lcd_Set_Cursor@temp 004F  
                 sprintf@c 005F                   sprintf@f 0053            ___lwmod@divisor 004D  
          ___lwmod@counter 0052                   stringdir 050A                   stringtab 0500  
